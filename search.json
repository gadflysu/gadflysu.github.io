{"title":"七月十六夜与父母电话：父母的无力感与我的轻蔑","date":"2019-07-15T16:00:00.000Z","url":"/life/phone-call-with-parents-on-july-16th/","tags":["parents","education","love","emotion"],"categories":["life"],"content":"我想是自青春期开始的一个习惯，也许是初中，或许更早。我对父母轻易地表现出轻蔑。尽管我知道这是「自然的」，但我仍然感到遗憾，尤其是现在，一个自认为愧对父母养育之恩的二十岁时候。教育和极权的共生父母对于孩子「长大」的标志，让我猜一猜，大概会是觉察到「无力感」的时候。如是的场景在影视中并不鲜见：年岁渐长的少年进入青春期，反叛、放肆、无所顾忌，某日犯下打错，其父母抬手眼见要打了，终究没有下手。这绝不仅仅是于心不忍，可能更有一种深远的担忧——孩子已经开始萌生自我意识，开始主宰自己的世界了，若真下手说不定要造成无法挽回的撕裂。这种无力感，生于对孩子的世界的失控。孩子初见世时，懵懂无知，面对的唯有来自父母的「极权」——容我解释，这里没有贬义，只说极端的权力 (power)，大多数时候它充满着爱意与仁慈，或许也没有（比如对于「父母皆祸害」小组的同胞们）。「这叫红色，那位叫叔叔，筷子应该这么拿……」孩子对世界的全部认知来自于父母，是谓父母完全地控制孩子的世界，教育和极权共生。深远的启蒙与控制稍微有点陈词滥调的嫌疑。我的被控制，则可能比一部分同龄人要更甚，也不是在于活动自由之类的限制，恰恰相反，我的父母一向是比较开明和宽容的。——我怎么仅一句话里就前后矛盾呢？现在的我对于世界的认知，一大部分谓「科学」，而我的父亲对我的科学启蒙有着相当大的作用。不仅如此，他也敬畏神灵，所以自小我也听说着许多民间的神秘传说。这两个部分是我的世界的重要组成，就此而言，所谓被控制的更甚，也是我受父母之恩泽更为深远。与此同时，虽然我内心非常反叛，但我实际上非常之怂。所以总体上我算是个规矩听话的小孩。夏夜的一次电话夏天的淋浴，我喜欢从用热水渐调到用冷水，温度变化的水与肌肤接触，非常爽。尤其最好浴后适逢夏夜的凉风，微微吹拂，无聊日子里难得的身心高潮——今晚正是，不会如昨晚一样闷热。在阳台或伸懒腰，或坐下耷拉，东风拂面，舒服又熟悉，想起在家吹晚风的幸福了。拿起手机 FaceTime 给家里，闲聊。我打电话回家几乎未有什么要事，有时自私地忙，一个月都不打，有时猛地想起就打。话里是琐碎，甚至要找话说，其实沉默也好，沉默如同我往常在家待着，只要数据连通我就觉得家人在身边。正说着准备自己做东西吃的事，提起用电安全，我忽而模糊地想起，很久以前父母似乎有次意外地与交流电有碰触，当时非常危险，幸好结果无事。我记得这段是我从旁听父母交谈知道的，或许不是，我记不清。于是我问母亲：「以前好像爸说碰到电是穿鞋不接地无事还是赤脚接地无事来着？」真是问得毫不惭愧，这点物理知识都要忘。父亲在旁边明显地严厉起来，略带着怒气说这不告诉，好奇这个对我不好。大意如此，是对着小孩讲的感觉。我叛逆的灵魂迅即升起，反对道：这点科学知识我上网一查便知，仅仅是现在闲聊提起罢了，好笑，难道我要蠢得拿手去默默插座一试吗？看来对等，的确小孩子气，这小孩不是小小孩，是叛逆期的骄傲小孩。爱、恐惧和无力感是的，放下电话我觉得不自在，我觉得不好——这种自然反应一般的对父母的轻蔑。轻蔑的底气是骄傲的自我。父亲此种严厉还有次几乎一样的，是过年时家人闲聊，说到年轻时父亲武力之勇猛精巧，奶奶好奇那么为何不授予孩子我、有武傍身何不呢。是今年的春节，所以我记得很清楚，父亲的逻辑很清晰：学了他要以为他会了，就容易惹祸上身；不会，到社会上认怂得个安全。有道理，免得我在这个 21 世纪的野蛮社会里「好勇必败」。当这两件事情一起出现在脑中，我觉察到父亲的恐惧，一种出自深爱的恐惧——就是怕我出事，那就干脆不教，什么拳脚什么交流电，一概不教想必少一分风险。不想转眼二十度春秋，我独立意识很久了，反叛愤怒也很久了。父母的习惯与现实不合，他们现在能够把控的空间不断紧缩。父亲用心良苦，出于温情的习惯也在近几年在我面前屡屡碰壁。可是一向暴躁的他终究也平和相对，未见恼怒未见气馁。我要说的，只是父母这份时间造成的「无力感」。对轻蔑的遗憾也不算很意外，我开始觉察父母的心绪与感受。当然是依赖于换位想象，可能不够精确，但我觉得是如此了。我一直希望我的青春期尽量长，一直保有赤忱、较劲与叛逆。可是这些东西也将导致我在眼前以及将来的生活中受挫，没办法的，否则，我怎么会觉得成长那么痛呢。长大以后，觉得自己可以掌控自己的世界，决定自己的意识究竟要往何处生长，常常傲视天地，自不量力。这种傲气碰上来自于父母习惯性的控制，容易产生冲突，「轻蔑」则算是平和的冷气了。尽管有一点值得一提的是，所谓习惯性的控制，其实也包含着父母对于已经成人的我轻视。我仍然对自己感到遗憾。我完全可以有更加温柔的回应，可惜习惯的速度容不得我多虑。一次穿越大半个中华的通讯，我很不情愿这样收尾。无力感代表着非暴力，其背后是深沉的爱；只是在世上混了二十年就要轻蔑爱自己的人，是幼稚且可笑的。"},{"title":"《乐队的夏天》第 8 期「理想世界」：2019 年最好的一期节目","date":"2019-07-14T16:00:00.000Z","url":"/life/the-big-band-ep8/","tags":["music","band","rock and roll","variety show"],"categories":["life"],"content":"《乐队的夏天》第 8 期，是在 2019 年全年（对，包括未来）、所有节目（对，包括所有类型）之中，最好的一期节目。这期是延续上一期积分赛的下半场，八个乐队自由选歌表演，主题是「理想世界」。看这期节目的感受是：哭完一场，又哭一场。小孩子的眼泪是咸的，大人的眼泪又苦又酸。理想很遥不可及，生活很无聊，成长很痛。观赏指路：▶️ 《乐队的夏天》07/13/2019 第 8 期（上）▶️ 《乐队的夏天》07/13/2019 第 8 期（下）刺猬 - 24 小时摇滚聚会                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-BSAPLMBJ\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"24 小时摇滚聚会\",              author: \"刺猬乐队\",              url: \"刺猬乐队 - 24 小时摇滚聚会 (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        刺猬总冠军！中间那段太爽了。面孔 - 港湾                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-OGlinCZj\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"港湾\",              author: \"面孔乐队\",              url: \"面孔乐队 - 港湾 (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        钢琴加上交响乐真的惊艳到我了。旋律非常好听。辉歌的嗓音真的保养得好好。海龟先生 - Where Are You Going                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-NkxMvHXY\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"Where Are You Going\",              author: \"海龟先生\",              url: \"海龟先生 - Where Are You Going (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        其实我是灾难的幸存者。为什么不是我？为什么是他们？我大约是从这首歌开始哭的。往哪儿走呢？往前走啊。盘尼西林 - 群星闪耀时                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-LAFqQIVF\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"群星闪耀时\",              author: \"盘尼西林\",              url: \"盘尼西林 - 群星闪耀时 (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        我就是邪恶的，我是黑夜的一部分，我低头见的是自己，我仰头瞻仰的是闪耀群星。Mr. WooHoo - Someday                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-FcgClZMR\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"Someday\",              author: \"Mr. WooHoo\",              url: \"Mr. WooHoo - Someday (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        有一天，人们穿着花裤子在沙滩上一起舞蹈，欢送我的离去。看似轻松律动的音乐，其实讲的是「生死」这个永恒的命题。老狼点出问题：无常。马斯卡给出答案：豁达。九连真人 - 北风                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-xoAAuMmg\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"北风\",              author: \"九连真人\",              url: \"九连真人 - 北风 (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        九连这次没有小号，更安静、悠扬。旋律和编曲都没得说。我爱的就是这样的生活。看到阿麦和阿龙哭了，我也哭了。最近真是很容易代入，且见不得人流泪。新裤子 - 生活因你而火热                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-LRcubyAR\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"生活因你而火热\",              author: \"新裤子\",              url: \"新裤子 - 生活因你而火热 (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        不知道是否前面积攒情绪的关系，至此我已经呼吸非常困难了，抹泪的纸巾已经好几张。新裤子这场表演和《花火》一样，直击心灵，特别是配合节目组制作的黑白画面。哭，且哭得不痛快，如鲠在喉，如生活。我难过，抽泣不止，可是嘴角微扬，四肢、肚子乃至全身发麻、萎缩。生活的理想世界，理想世界的生活。这实在是，我第一次听歌导致如此剧烈的生理反应，甚至是第一次感受到身体萎缩。旅行团 - Bye Bye                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-QKiLbsiO\"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: \"Bye Bye\",              author: \"旅行团乐队\",              url: \"旅行团乐队 - Bye Bye (live).m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        Bye bye 我的怯懦卑微与屈辱，Bye bye 我讨厌的东西、我恨的世界。我们不是来改变世界的，我们就是世界。与世界的对抗，对世界的义务。果然最直接的催人泪下的，仍然是讲述生活的。"},{"title":"正则表达式","date":"2019-07-11T16:00:00.000Z","url":"/general/regular-expression/","tags":["string","pattern matching","grep","sed","awk"],"categories":["general"],"content":"正则表达式 (Regular Expression, regex, regexp) 使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。  A regular expression is a pattern that describes a set of strings. 常用的工具 grep 中的「re」就是指正则表达式，Ken Thompson 在 44 年前 (Nov. 1974) 将此符号系统引入 grep。正则表达式的 POSIX 规范，分为基本型正则表达式 (Basic Regular Expression, BRE) 和扩展型正则表达式 (Extended Regular Express, ERE)。顾名思义，后者会更强大。在 GNU 实现的 grep 中，基本语法和扩展语法的可用功能没有区别。Perl 兼容正则表达式 (Perl Compatible Regular Expressions, PCRE) 支持更多的功能，它是由 Philip Hazel 在上个世纪末 (1997) 开发的一个正则表达式引擎，实现与 Perl 5 一致的语法和语义，被用于许多现代的著名项目，如 Apache、PHP、KDE、Postfix、Nmap 以及 Apple Safari。基本结构我们暂且不管形式语言、自动机之类的理论，先来看一个简单的例子：hello*。这个正则表达式是含有 6 个字符的字符串，它匹配 hello、helloo 以及 hellooo 等等无穷多个以「hello」开头、后接 0 个或多个「o」的字符串。正则表达式的基本结构是匹配一个字符的模式 (pattern)。大部分普通的字符，包括所有的字母和数字，都匹配它们自身，如 h 匹配 h、e 匹配 e。一些有特殊功能的字符，如上例中表示匹配前面的子表达式 (o) 任意次的 *，叫作元字符 (meta-character)。若要匹配元字符自身，则需要一个前缀的反斜杠 (\\, backslash) 进行转义 (escape)，如 \\* 匹配一个星号 (*, asterisk)。元字符有：^ $ ( ) * + ? . [ \\ { |。句点 . 是元字符，匹配除回车符 (carriage return, CR) 和换行符 (newline / line feed, LF) 之外的任意的单字符。例如，w.ll 能匹配 will 和 well。一个正则表达式可后接像 * 这样的表达式，表示重复操作 (repetition)。详见下表：表达式描述*匹配前面的子表达式 0 次或更多次。?匹配前面的子表达式 0 次或 1 次。+匹配前面的子表达式 1 次或更多次。{n}匹配前面的子表达式恰好 n 次。{n,}匹配前面的子表达式至少 n 次。{n,m}匹配前面的子表达式至少 n 次、至多 m 次。从上表可见重复操作不一定由单个字符完成，更复杂的操作可能需要成对出现的花括号 ({ &amp; }, curly braces) 以及数字。* 等价于 {0,}，? 等价于 {0,1}，+ 等价于 {1,}。此外 GNU grep 中还支持 {,m}，表示匹配至多 m 次，这是 GNU 的扩展 (extension)。两个正则表达式可以直接连接，表示串接操作 (concatenation)，其结果匹配任何由分别匹配原表达式的字符串串接而得的字符串。为了表达得严谨些，看起来有点绕，举个例子来看就会很简单：正则表达式 a 和 b 串接的结果 ab，匹配由字符串 a 和 b 串接而得的字符串 ab。显然，这种操作是基本而广泛的。两个正则表达式可以用竖线符 | 连接起来，表示选择操作 (alternation)，其结果匹配两个表达式中的任意一个。举个例子：a|b 匹配 a 或 b。（没错，这和或运算 (or) 的中缀表示法一致。）重复操作优先于串接操作，串接操作优先于选择操作。例如，hi* 能匹配 hii 而不能匹配 hihi，fuc|nk 能匹配 fuc 而不能匹配 funk。整个表达式可以使用圆括号 (( &amp; ), parentheses) 括起来，形成一个新的子表达式 (subexpression)，其优先级比前述三种操作都更高。例如，(hi)* 能匹配 hihi，fu(c|n)k 能匹配 funk。空的正则表达式匹配空字符串 。方括号表达式与字符类除了前文介绍的花括号和圆括号，还有一种常见的括号——方括号 ([ &amp; ], (square) brackets)。 由方括号括起来的一系列字符叫作方括号表达式 (bracket expression)，匹配方括号内字符序列中的任意一个字符。例如，[fox] 匹配 f、o 或者 x，等价于 f|o|x。若序列中第一个字符为脱字符 (^, caret)，则匹配排除序列中字符的任何字符。例如，[^cat] 则无法匹配 c、a 或 t 但能匹配 d、0 或 g 等等。方括号内仍有特殊功能的元字符仅余用于转义的反斜杠 \\ 以及在第一位的脱字符 ^。例如，[(fu)*k] 能匹配 (、f、u、)、* 或者 k。在方括号表达式中，由两个字符及其之间的连字符 (-, hyphen) 组成的字符串叫作字符范围表达式 (range expression)，匹配在字符集中处于这两个字符之间范围的任意一个字符。还是举例子比较简单，对于一般的字符编码，[a-z] 匹配任意一个小写字母，[0-9] 匹配一位阿拉伯数字。所以，[A-D] 等价于 [ABCD] 即 A|B|C|D。此外，方括号表达式中预定义了一些命名字符类 (named character class)，表示一系列特定的字符。详见下表：类名描述[:lower:]小写字母字符，同 [a-z][:upper:]大写字母字符，同 [A-Z][:alpha:]字母字符，即 [:lower:] 和 [:upper:]，同 [A-Za-z][:digit:]数字字符，同 [0-9][:xdigit:]十六进制数字字符，同 [A-Fa-f0-9][:alnum:]字母和数字字符，即 [:alpha:] 和 [:digit:]，同 [0-9A-Za-z][:blank:]空白符，指空格 (space, SP) 和制表符 (horizontal tab, HT)，同 [ \\t][:space:]空格符，指制表符 (HT)、换行符 (LF)、垂直制表符 (vertical tab, VT)、换页符 (form feed, FF)、回车符 (CR) 和空格 (SP)[:punct:]标点字符，有：! &quot; # $ % &amp; &#39; ( ) * + , - . / : ; &lt; = &gt; ? @ [ \\ ] ^ _ &#x60; { &#x7C; } ~[:graph:]有形字符，即 [:alnum:] 和 [:punct:][:print:]可打印字符，即 [:alnum:]、[:punct:] 和空格 (SP)[:cntrl:]控制字符，在 ASCII 中指从十进制的 0 到 37，以及 177 (DEL)注意上表首列中的中括号是类名的一部分，含有命名符号类的正则表达式应该形如 [[:name:]]。例如，正则表达式 [[:lower:]01] 匹配所有小写字母，以及两个数字 0、1。这里提及一个有趣的问题：我们知道 [[:digit:]] 等价于 [0-9]，那么如何写一个等价的一般的方括号表达式以在 shell 中使用 GNU grep 匹配 [:punct:] 这样一个复杂的符号类？这个问题主要是将有特殊功能的字符表示为普通字符，涉及 shell 中的引号使用以及中括号内的字符顺序。答案是：我们在 shell 中通常用单引号来引用正则表达式，因为单引号最大限度地避免扩展 (expansion)，保留特殊字符的字面值 (literal value)，如 $ 仅仅是美元符 (dollar sign) 而非变量标志。前文说方括号内的元字符并未提到方括号 ([ &amp; ])，也就是说 [[] 匹配左方括号，[]] 匹配右方括号。这是没错的，虽然看起来有点不合常理的机智，因为一般而言 ] 不是标志着这个子表达式的终结吗？——类似于「在第一位的 ^ 代表排除式内字符」的规定，特别地，方括号内在第一位的 ] 匹配自身，而非结束方括号表达式。所以若要匹配 ]，必须将它放在第一位；正如若要匹配 ^，不得将它放在第一位。除此二之外，更多规则详见下表：模式描述[.表示 collating symbol 的开始.]表示 collating symbol 的结束[=表示 equivalence class 的开始=]表示 equivalence class 的结束[:表示命名字符类的开始，后跟有效类名:]表示命名字符类的结束-表示字符范围，当在非首位且非末位时 匹配空串的特殊表达式反斜杠符 \\ 作为转义字符（港台称「跳脫字元」），后跟一些特定的字符，表示一些特殊的模式匹配。模式描述\\b匹配单词边缘的空字符串\\B匹配非单词边缘的空字符串\\&lt;匹配单词开头位置的空字符串\\&gt;匹配单词末尾位置的空字符串\\w匹配单词成分，等价于 [_[:alnum:]]\\W匹配非单词成分，等价于 [^_[:alnum:]]\\s匹配空白符，等价于 [[:space:]]\\S匹配非空白符，等价于 [^[:space:]]其中「单词边缘」？「空字符串」？不太好理解。举个例子，字符串 self-censorship 的每对相邻字符 (eg. s e)之间以及第一个 s 的左边、末尾 p 的右边的位置上，可以看作存在一个（或任意个）「空字符串」。那么位于第一个 s 和 c 的左边、f 和 p 的右边，也就是「单词边缘」的位置上的那个空串，能够由 \\b 匹配。于是 \\bs. 能匹配该串中的 se 而不匹配 so 或 sh。所谓单词边缘就是指一个其左右两个字符一个属于单词成分 (\\w)、一个不属于单词成分的位置。于是不难理解 \\B、\\&lt; 和 \\&gt; 应匹配什么位置的空串。匹配特定空串实际上就是匹配位置。脱字符 ^ 匹配行首的空串，美元符 $ 匹配行末的空串。这两个字符被称为锚 (anchor)，因为它们分别被锚定到行首和行末。例如，一文本文件有如下字符：则 ^H.p 匹配该行内的 Hip，H.p$ 匹配该行内的 Hop。反向引用与子表达式反向引用 (back-reference) 的语法为 \\n，其中 n 是一位数字。\\n 引用了正则表达式中第 n 个由圆括号形成的子表达式 (parenthesized subexpression)。例如，(f)\\1 相当于 (f)(f)，匹配 ff。当被引用的子表达式被用于选择操作 (|) 中，假如该子表达式所在的部分不参与匹配，则整个匹配失败。例如，a(.)|b\\1 无法匹配 ba。GNU grep 给出的错误是「Invalid back reference」。当有多个正则表达式进行匹配（比如 grep 使用 -e &lt;PATTERN&gt; 或 -f &lt;FILE&gt; 参数）时，向后引用的编号 (n) 是对于每一个正则表达式而言的。以上是「正则表达式」的基本内容。[Ref] GNU grep docs"},{"title":"在 Ubuntu 安装与配置 MariaDB","date":"2019-03-17T16:00:00.000Z","url":"/database/mariadb-on-ubuntu/","tags":["mariadb","mysql","linux","ubuntu","primer"],"categories":["database"],"content":"MariaDB 是流行的关系型数据库管理系统 (RDBMS)，其著名用户有 Wikipedia、WordPress.com 和 Google。在 2009 年 Oracle 收购 Sun Microsystems 之后，后者旗下的开源数据库系统 MySQL 自然归属于（臭名昭著的）Oracle。为规避潜在的闭源风险，MySQL 的创始人 Michael Widenius 及原开发团队创建了一个保证开源的新分支——MariaDB。安装MariaDB 可以从 Ubuntu 的官方软件源安装：从前文的背景简述可知，MariaDB 兼容 MySQL，毕竟……/usr/bin/mariadb 就是 /usr/bin/mysql 的软链接。要检查软件版本，执行：本文将在上示环境和软件版本下进行。启动 MariaDB 服务：安全配置安装完成后建议首先用软件自带的一个脚本执行初始的安全配置：注意使用 sudo 以获取 root 权限来执行，这是因为 MariaDB 的默认用户 root 采用 unix_socket 插件进行鉴权（这一点会在后面提到），而执行安全配置需要登录。root 默认密码为空，按下「Enter」键即可。接下来设置你的 root 用户密码（注意没有回显）：MariaDB 默认有一个允许任何人登录的匿名用户，方便测试或者初次安装配置（例如后文会讲的用户配置），在生产环境下建议删除之：root 用户一般应该仅允许从本地登录，禁止远程连接：MariaDB 默认有一个允许任何人访问的数据库 (test)，在生产环境下建议删除之：最后重载权限表以应用上面所做的变更：创建用户经过安装和简单的初始配置之后，我们来尝试连接到 MariaDB server 看看，直接执行：此时会遇到错误：看起来是访问权限的问题：以 root 用户从本地尝试访问被拒绝。我们在前面的配置中已经删除了匿名用户，现在 MariaDB 只有一个 root 用户；而我当前系统登录用户并非 root——其实数据库系统的用户和操作系统的用户显然是两回事，两者有什么关系呢？参考 Stack Overflow 的一个问答，MySQL 在一些系统（比如 Ubuntu）默认使用 unix_socket 插件，依赖系统用户凭证进行鉴权。官方文档讲，这个插件发布于 MariaDB 5.2.0，从 MariaDB 10.4.3 开始默认启用。unix_socket 允许用户通过本地的 Unix socket 文件使用系统凭证登录到 MariaDB Server。此插件通过系统调用可以获取连接到 socket 的进程 uid，进而得到与其关联的用户名，然后会将连接用户作为具有相同用户名的 MariaDB 用户进行身份验证。简单的理解大概是，MariaDB 现在是通过系统用户来登录的，那么就要求 MariaDB 有一个同名用户。我们来看看 MariaDB 现在的用户配置：虽然也可以修改插件配置，但是这里我仍然建议创建一个同名的数据库用户：其中 YOUR_SYSTEM_USER 是你的用户名。至此就可以开始顺利地玩耍了。"},{"title":"为 Ubuntu LTS 安装 HWE 以获取更新的内核与图形支持","date":"2019-03-05T16:00:00.000Z","url":"/linux/ubuntu-install-hwe-for-newer-kernel-and-x-support/","tags":["ubuntu","software","hwe"],"categories":["linux"],"content":"本文是一份提示。TL;DR:原计划于今年 2 月 7 日发布的 Ubuntu 18.04.2 LTS 因 Linux 4.18 内核的一个 bug 推延至 2 月 14 日。（放送旧闻？）Ubuntu 18.04.2 LTS 最终伴随着来自 18.10 的内核与图形更新以及其他安全补丁和 bug 修复得以正式发布。此外，Ubuntu 18.04 的生命周期从五年延长至十年，这是 Ubuntu 创始人 Mark Shuttleworth 在去年 11 月的 OpenStack Summit 上宣布的。Ubuntu LTS enablement（也叫 HWE 或 Hardware Enablement）stacks 用于支持不断更新的硬件技术，能够为现存的 Ubuntu LTS 提供更新的内核与图形支持，适用于桌面版、服务器版甚至 Cloud 版和虚拟镜像。HWE Stacks (i.e. HWE Kernel + X Stack) 随 LTS 的小版本更新（point release，比如最近的 18.04.2）发布，当通过媒介安装新版 Ubuntu LTS 时，HWE 会一并安装，对于正在运行的系统则需要手动安装。为了减轻维护团队的负担，HWE 采用滚动更新的模式。LTS 的第五个（即最后一个）小版本更新时，用户将被要求升级至最后一个 HWE stack 以保留安全更新和 bug 修复的支持。安装 HWE 只需要执行： 下面是我的安装记录，显示了一些实际即将安装的和移除的包：[Ref] Softpedia news, It’s F.O.S.S news, Ubuntu wiki LTSEnablementStack &amp; RollingLTSEnablementStack"},{"title":"二〇一八，以末为始","date":"2018-12-30T16:00:00.000Z","url":"/life/the-end-of-2018/","categories":["life"],"content":"                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-xAcGzsfG\"),            narrow: false,            autoplay: true,            showlrc: 2,            music: {              title: \"浪流連\",              author: \"茄子蛋\",              url: \"EggPlantEgg-WavesWandering.mp3\",              pic: \"/life/the-end-of-2018/EggPlantEgg-WavesWandering.jpg\",              lrc: \"EggPlantEgg-WavesWandering.lrc\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        今天醒来已是午后，一如今年混乱的生活习惯。摸到床边的眼镜戴上，神志不清地打开手机，漫无目的地划动浏览。严冬的阳光从窗外射进晦暗的寝室里，渐渐终于能回过神，知道我在何处要做什么事。二〇一八年，没了。这是我第一篇公开发布的博客，是对自己的一年来浪荡歧途的审视和反省，以末为始。我自满于雕虫小技先说代码，主要时间用于算法题目训练，代码写得最多还是 C，最多混乱地用用 C++ Standard Library 几个简单的类以简化代码，Java 不能算入门。其次说习惯，主要工作平台切换到 Ubuntu 18.04 LTS，熟悉 Linux 的一些常用命令，简单地接触 Shell，还不会写脚本，就把命令按序写入文件当作快捷方式用 (😅)，另外也算能自己应对各种意外错误，依靠网络自行解决问题，可以沉着（不慌）面对英语文档。ACM 生涯结束以后，主要兴趣转向 Web，尽管至今仍相信这不会是我将来的工作领域。遗憾的是，自认为至今仅仅零散地见识了一些基础的技术应用，算是入门水平吧。总之，我仍然无法专注于某项技术深入学习。我兴趣广泛，但时间的限制令我浅尝辄止，我喜欢折腾，我明白基础知识的重要性，却仍执迷于环境和工具配置。我自满于雕虫小技，我浪费珍贵的精力用于那些无益于我技术前途的东西，这是一种短见和贪婪。我的青春结束了这是宣言，于 11 月 15 日 22:32 在 Telegram 的私人频道发出。10 月 28 日我到徐州参加亚洲区域赛，是我的第一场比赛，也是最后一场。无牌退役，是「结束」的标志。我眼睁睁看着自己的生命力丧失了，对此我当然会反抗，但无法否认这个现实。我二十了。回不去了，就努力长大吧。我还是喜欢哭下半年哭的次数多了，我很愿意如此，小标题的「喜欢」真不是平常人们言下「习惯」之意，而是由衷的。说说印象深刻的几次。一次是在对杨的倾诉，我当时陷入无底的悲哀，执迷于自我之究竟，我是逼着自己流出泪水的。一次也是面对杨，是突如其来的自我检查和陈述，说着说着，把自己说哭了。弄哭我的是自己，我恐惧时间、恐惧成长、恐惧变化，我恐惧面对自己。许多次是为了杨超越，这个我有幸于夏天认识的平凡却不普通的少女，为其遭受的责难和暴力、为其所得的自信与荣耀，我感动于赤诚纯粹的心。几次是看《你好，旧时光》，我喜欢生动的青春、单纯的情愫，我喜欢他们的有血有肉、勇敢仗义。青春里每个人都是主角。我愿彼时我会如小越在日记总所言一般——「可是呢，我到现在还是没有改哈哈哈哈」。我扔弃了社交人生最无谓最浪费的就是人事。我和一个朋友绝交，我疏远了才交好的室友，我切断了可有可无的社交联系。我可以接受只有一两个好友，我不愿意再嬉皮笑脸地面对我根本不在乎的人事，我不会主动对迎面走来的人们打招呼，我不想再给那些来去无由的人们任何多余的眼神。既然我信随机混乱的世界观，我就接受世俗所谓之「缘分」。当你朋友意味着不要也罢。社交这种事，我本就不擅长便也不想花力气去努力了。我没有明确的目标我有想做的事，我没有计划，也没有明确的目标。我自以为当初比同龄人清醒，走到今天反而越发糊涂和迷茫。不知所为，不知所向。我的明天零点是二〇一八的终结。以末为始，我会一无所有失无可失地出发，我会勇敢且诚恳地大步往前走。我相信明天会更好，我会更快乐。万事胜意。"},{"title":"Windows 启动错误 0xc0e90002 的解决办法","date":"2017-10-21T16:00:00.000Z","url":"/issue/windows-error-0xc0e90002/","tags":["windows","error","boot","blue screen"],"categories":["issue"],"content":"[Note] 2017 年的旧文，近期 (Jul. 2019) 寻回并整理。在一次从 Windows 10 家庭版升级至 Windows 10 Insider Preview 的过程中，系统自动重启时无法从硬盘启动，之后我尝试从 Legacy 模式启动，亦尝试从装载 Windows 的 U 盘启动时，才出现蓝屏，并报告 error 0xc0e90002。网上还有一些别的导致 error 0xc0e90002 的实例：升级至 16193 版本后出问题，欲回退至 15063 失败安装并使用 Insider Preview 一段时间后，欲回退至原来的 Windows 版本从 1703 预览版回退失败后重装 1703 或 1607可见此错误一般出现在安装新版本 Windows 10（如 Insider Preview 等等）失败（也可能成功）后欲回退或重装 Windows 失败时。这个错误是 EFI 变量中的「Revoke」信息导致的，下文记录个人解决该错误的操作步骤。准备用料一个正常运行的操作系统：也许你在设备上安装了多系统且有可启动的其他系统，也许你可以借朋友的正常计算机，也许你备有系统启动盘；一个 U 盘；EFI shell：从 edk2 项目下载 EFI shell（64 位 或 32 位）。制作 EFI shell 启动介质将 U 盘格式化为 fat32 格式，并创建文件夹 /EFI/Boot/；将 64 位 EFI shell 重命名为 bootx64.efi，将 32 位 EFI shell 重命名为 bootla32.efi，并将它们复制到 U 盘的 /EFI/Boot/ 目录下。进入 EFI shell咨询设备制造商，进入 BIOS，关闭「安全启动」模式；在 BIOS 中调整设备启动顺序使 U 盘优先启动，或许你的计算机和我一样支持开机时进入「选择启动设备」界面；进入 U 盘并选择对应位的 EFI shell。删除 Revoke 信息显示 Revoke 信息，执行使用 dmpstore 命令删除列出的 Revoke 信息，类似于：退出 EFI shell如下图。启动或重装操作系统在 BIOS 打开「安全启动」选项；按下电源键开机，进入原操作系统，可能需要等待系统修复；或者从 U 盘启动并重装新的操作系统。以上是解决 error 0xc0e90002 的操作步骤。[Ref] Microsoft Community"},{"title":"About","date":"2019-07-17T12:53:51.676Z","url":"/about/index.html","content":"                                              var ap = new APlayer({            element: document.getElementById(\"aplayer-siemBFsF\"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: \"盼暖春来\",              author: \"刺猬\",              url: \"刺猬 - 盼暖春来.m4a\",              pic: \"\",              lrc: \"\"            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        🐟 gadflysu: a beginner, a developer, an idealist, one of the survivors of the 21st century🌏 Language: 中文 / English👨‍🎓 Major: Software Engineering📧 Email: i@gadflysu.com🕸 Social Network:🐦 Telegram (📻 Channel / 💬 Group)🐣 Twitter📷 Instagram🐘 Mastodon🚫 Say No To WeChat👨‍💻 Programming:🛶 Pascal⛰ C🏔 C++⛵️ Java⏱ Algorithm Competition: NOIP (2015) / ACM-ICPC Regional (2018) No Awards :)💻 Laptop: OMEN by HP Laptop PC - 15-ax018tx (2016)📱 Mobile Phone: Apple iPhone SE (Space Gray) (2018) / Google Nexus 5X (2016)🖥 Desktop OS: Ubuntu 18.04 LTS Bionic☁️ Server OS: CentOS 7 Ubuntu 18.04 LTS Bionic🐚 Shell: Zsh (with Oh My Zsh)📝 Editor: Sublime Text 3⌨️ Indentation: 4 Spaces &nbsp;&nbsp;&nbsp;&nbsp;🏥 Against “996” working system🇭🇰 Stand with Hong Kong🏳️‍🌈 Believe “Love is Love”"},{"title":"Gallery","date":"2019-07-16T08:32:12.577Z","url":"/gallery/index.html"},{"title":"捐赠","date":"2019-04-17T16:00:00.000Z","url":"/donate/index.html","content":"如果你喜欢我的作品、觉得它们对你有帮助，就请我喝杯咖啡吧！If you like my works and think they’re helpful, feel free to buy me a coffee!PayPalPatreonBuy Me A Coffee"},{"title":"Links","date":"2019-07-16T08:32:12.577Z","url":"/links/index.html"},{"title":"产品推荐","date":"2019-04-13T16:00:00.000Z","url":"/recommend/index.html","content":"BandwagonHostBandwagonHost 是著名的虚拟专用服务器厂商。点击「这里」购买 BandwagonHost 的 VPS，我可以获得 22% 的返利。Vultr[Special] 点击「这里」（或「这里」）成为 Vultr 的新用户并保持活跃 30+ 天、完成至少 $25 的订单，则你可以获得 $50 的 Vultr 额度，我可以获得 $25 的返利。Vultr 是著名的云服务商。点击「这里」（或「这里」）成为 Vultr 的新用户并保持活跃 30+ 天、完成至少 $10 的订单，则我可以获得 $10 的返利。DropboxDropbox 是著名的在线文件同步服务，可在多设备间快速同步文件，轻松分享文件或文件夹，恢复和还原已删除的文件和文件夹。点击「这里」成为 Dropbox 用户并安装软件。OneDriveOneDrive 是微软运营的在线文件存储服务。点击「这里」成为 OneDrive 新用户，你和我均可获得额外的 0.5 GB 存储空间。TeraCLOUDTeraCLOUD 是日本的一家在线文件存储服务，支持 WebDAV。点击「这里」注册并登录之后，在 Mypage 填写我的介绍代码 5S6CR，你可以获得额外的无限期的 5 GB 存储空间。"},{"title":"Search","date":"2019-07-16T08:32:12.577Z","url":"/search/index.html"},{"title":"Blog Tags","date":"2019-07-16T08:32:12.577Z","url":"/tags/index.html"},{"title":"timeline","date":"2019-07-16T08:32:12.577Z","url":"/timeline/index.html"}]