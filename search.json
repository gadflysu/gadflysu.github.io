[{"title":"二〇二〇","date":"2020-12-30T16:00:00.000Z","url":"/life/2020-in-review/","tags":["review"],"categories":["life"],"content":"瘟疫爆发了。 科比走了。 外婆、奶奶老了。 我哭着把论文改完了，毕业了，开始工作了。 外公走了。 我今年也顺利活下来了。 一直以来辛苦了。 希望我在二〇二一年走更多路、读更多书、写更多字，学会新的语言，赚更多钱钱，脱单……愿望太多了吧哈哈哈哈哈！ 祝你我开心。"},{"title":"现在开始使用 Ubuntu 20.04","date":"2020-05-14T16:00:00.000Z","url":"/linux/ubuntu-primer/","tags":["ubuntu","cheat sheet","share"],"categories":["linux"],"content":"上一次对主力操作系统的改动是从 Ubuntu 16.04 直接升级到 18.04，多年运行的系统至今已经累积了许多冗余文件，所以最近 Ubuntu 20.04 发布，我决定在新的硬盘分区从零开始安装配置。 之前意识到系统性能瓶颈也许不在内存而在硬盘读写，已经对残留的 Windows 所在硬盘进行了清理，腾出一定的空间就用来装新的 Ubuntu，了结我将系统硬盘从缓慢的 HDD 换到 SSD 的心愿。 这是一次系统迁移的实践。得益于 Ubuntu/Debian 的丰富生态，整个过程相当顺利，基本还原我之前的工作环境。 本文分享在常规安装并进入 Ubuntu Desktop 20.04 之后对工作环境的配置，包括但不限于安装常用软件、同步原有／建议配置等，力求美观与高效，前者令我这样审美偏执的人心情愉悦，后者可以加速我的日常工作。本文是系统初始配置的小抄 (cheat sheet)，相当的篇幅是软件分享，没有技术含量。 开始首次进入系统的向导窗口将引导我配置 Livepatch，Livepatch 用于减少因安全更新的系统重启，跟随进行即可，期间需要登录 Ubuntu 账号。 打开蓝牙设置，连接无线键盘。 系统预装的软件包从发布至今可能已经有包括安全修补在内的更新，执行： 注意刚开机时 Software Updater 可能会占用 /var/lib/apt/lists/，更新无法进行，稍等即可。 安装必要 CLI 软件以便之后的操作： 网络配置网络配置是包括 Android 在内的几乎所有操作系统初次启动时的必需步骤，特别是在网路审查普遍的地区。这里不是指网络接口驱动之类的事情，这部分 Ubuntu 已经做到开箱即用；而是指因当地网络策略限制，为了连接国际互联网而不得不进行的网络连接配置。本文以 Shadowsocks 为例，对此仅作简述。 ShadowsocksShadowsocks 是著名的 SOCKS5 代理，这里使用 shadowsocks-libev。安装： 停止默认的 ss-server 服务并禁用开机自启： 从网络服务提供者获取配置，写入 /etc/shadowsocks-libev/client.json，运行 ss-local 服务并启用开机自启： Privoxy有些应用程序仅支持 HTTP 代理，这里利用 Privoxy 将 SOCKS5 转为 HTTP。安装： 编辑配置 /etc/privoxy/config，在第 5.2 节加入下行： 其中「1082」是我的 Shadowsocks 本地端口。重启服务： 至此 HTTP 代理运行在本地 8118 端口，详见配置第 4.1 节。 ProxyChains-NG我没有配置系统全局代理，这里使用 ProxyChains-NG 在命令行程序运行时将网络连接重定向以通过 SOCKS5 代理。安装： 编辑配置 /etc/proxychains4.conf，加入下行： 其中「1082」是我的 Shadowsocks 本地端口。 为方便使用，设置命令别名： 或者手动在其他配置文件如 ~/.bashrc 中编辑。 以后若要通过代理执行命令，直接在前面加上 pc 即可，如查看自己 代理 IP： 软件源打开 Software &amp; Updates，修改软件源服务器到国内镜像或者代理服务器所在地。如果和我一样选择后者，接下来为 APT 设置代理，执行： 语言环境由于我在安装系统时将时区设定为台湾，执行 locale 可以看到系统的一些语言配置被自动设定为 lzh_TW。最明显的表现是系统各处的日期和时间显示均为中文，为了修改为英文，执行： 登出后重新登入生效。 输入法之前一直用 Fcitx，原来 Ubuntu 预置的是 IBus，现在开始体验。这里安装支持 IBus 的中州韻輸入法引擎。 启用 RIME 引擎： 在使用一段时间之后，发现有时有切换引擎失败的问题。执行： 自动挂载分区我有一个常用的外置硬盘，所以这一步必不可少。 查看分区 UUID： 编辑 /etc/fstab。注意选项 (&lt;options&gt;) 部分写 defaults,uid=1000,gid=1000。 外观主题和图标选择 Vimix，一款 Material Design 风格的主题。安装： 需要通过 Tweaks 来选择主题。 最容易影响观感的真是字体。 下列字体下载后解压到 ~/.local/share/fonts，执行 fc-cache -f -v。 JetBrains Mono San Francisco 常用 GUI 应用Sublime Text 3： 我认为 Sublime Text 3 是最好用的文本编辑器。根据官网说明进行安装： 从首选项 (Preferences) 菜单进入【Settings】，编辑配置。 与其他文本编辑器类似，Sublime Text 3 也拥有丰富的包 (package)，作为插件或扩展。 首先安装包管理器 Package Control。根据官网说明，按下【Ctrl + Shift + P】唤出命令面板 (Command Palette)，输入 Install Package Control 并按下【Enter】以确认；或者从工具 (Tools) 菜单中选择【Install Package Control…】。由于当地网络政策，上述步骤可能并不顺利，可以重复尝试，或者通过环境变量设置代理。 然后为 Package Control 设置代理（可选）。根据官网说明，从首选项 (Preferences) 菜单进入【Package Settings】→【Package Control】→【Settings – User】，编辑用户配置文件，添加下列行： 其中 host、port 根据实际情况调整（如 127.0.0.1:8118），注意 JSON 格式。 我选择 Material Design 风格的主题 Material Theme。根据文档，按下【Ctrl + Shift + P】唤出命令面板 (Command Palette)，输入 Package Control: Install Package 并按下【Enter】以确认，这是安装包的一般步骤。然后搜索 Material Theme，选择开发者 ID 为 equinusocio 的那个，按下【Enter】来安装。安装过程会提示是否安装作为依赖的另一个包 A File Icon，点击【Install】即可。 激活主题。唤出命令面板并输入 Material Theme: Activate theme。 自定义配置。从首选项 (Preferences) 菜单进入【Settings】，编辑用户配置文件，添加下列行： 其他包： PackageResourceViewer：查看和编辑包资源文件。 CoolFormat：代码格式化工具。 Carbon：Carbon 用于分享代码段的图片。 Typora： 我认为 Typora 是最好用的 Markdown 编辑器。根据官网说明进行安装： CopyQ： 剪贴板历史管理是【Ctrl + C/V】的绝配。 到首选项 (Preference) 中设定开机自启 (Autostart)，设定显示主窗口的快捷键，比如【Shift + F3】。 Synapse： 按下【Ctrl + Space】来唤出启动器，快速搜索或启动应用，以及其他插件。 到首选项 (Preference) 中设定开机自启 (Startup on login)，设定主题为「Virgilio」。 Plank： 到首选项 (Preference) 中设定主题为「GTK+」，适当设定【Icon Zoom】。 到 Startup Applications 中添加新项以设定开机自启，名字 (Name) 任意，命令 (Command) 为 plank。 Conky： 桌面展示： 到 Startup Applications 中添加新项以设定开机自启，名字 (Name) 任意，命令 (Command) 为 conky -d。 顶栏 (panel) 展示： 到首选项 (Preference) 中设定【Indicator items…】，添加新项 🔥 $(size(mem.user)) ⬇️ $(speed(net.down)) ⬆️ $(speed(net.up))，然后到顶栏曲线图处使用鼠标滚轮切换到该项显示。 Flameshot： 到配置选项 (Configuration) 中设定开机自启 (Launch at startup)。 到系统键盘设定中，添加新的自定义快捷键，比如【Ctrl + Shift + Alt + P】，名字 (Name) 任意，命令 (Command) 为 flameshot gui。 Kazam： GNOME sushi： 文件快捷预览工具。 在文件管理器 (Nautilus) 中，按下空格即可对选中文件进行快速预览。 Nautilus Image Converter： 在文件浏览器中快捷调整图片尺寸的工具。 对图片的右键菜单中可以快速调整图片大小 (resize images)。 Dconf Editor： DConf 是用于存储桌面环境设定的底层键值对数据库，这里安装一个 GUI 编辑器。 Compiz Config Settings Manager： Compiz 是窗口管理器，这里安装一个 GUI 设定管理。 Telegram： 我认为 Telegram 是世界上最好用的即时通讯工具。 Meld： Meld 是著名的图形对比 (diff) 与合并 (merge) 工具，支持对比文件和文件夹。 qBittorrent： 我认为 qBittorrent 是最好用的 BitTorrent 图形客户端。 按照 Wiki 描述迁移程序设定和种子等数据，将 ~/.config/qBittorrent/ 和 ~/.local/share/data/qBittorrent/ 两个文件夹复制到相应位置。 Thunderbird： Thunderbird 是 Mozilla 名下开源的电子邮件、新闻、RSS 和聊天客户端。在适应一段时间之后，我认为 Thunderbird 非常可靠。 Ubuntu 系统预置 Thunderbird。按照文档 “Profiles” 或 “Moving Thunderbird Data to a New Computer” 迁移个人数据 (~/.thunderbird/xxxxxxxx.default/) 或全部应用数据 (~/.thunderbird/)。 KeePassXC： KeePassXC 是密码管理器的不二之选。 到设定 (Settings) 中启用【Show a system tray icon】。 云存储： 网易云音乐： QQ： 常用 CLI 应用oathtool： 基于时间的一次性密码 (TOTP) 的命令行工具。 在妥善、谨慎地保存密钥 (key) 文件的前提下，获取一次性密码： Neofetch： 显示系统基本信息。 trash-cli： trash-cli 是命令行的回收站工具，与图形环境兼容 (FreeDesktop.org)，支持记录文件名、原路径、删除日期和权限。 Google Chrome： 从官网下载对应版本 (deb) 的包，然后安装： 安装过程 Google Chrome 会自动配置软件源，以后使用 APT 更新即可。但在第一次执行 apt update 时，如果遇到无法验证签名的错误： 根据 Google Linux Software Repositories 说明，执行： Chromium： 大概是从 Ubuntu 19.10 开始，chromium-browser 成为一个过渡包，直接执行 apt install chromium-browser 会自动从 Snap 安装 Chromium 浏览器。Snap 版本的 Chromium 在读写其他分区的文件时存在不便。总之 Snap 并不讨喜。好在上游 Debian 10 的软件源仍在编译 Chromium，利用这一点，我们可以仍然从 APT 安装 Chromium。 如果已经从 Snap 安装 Chromium，那么先卸载： 如果同时安装了 chromium-chromedriver、chromium-browser-l10n、chromium-codecs-ffmpeg-extra 等包，相应执行： 添加 Debian Stable 源。新建并编辑 /etc/apt/sources.list.d/debian-stable.list： 获取并添加 Debian 公钥： 根据 APT 文档，设定软件源优先级策略。新建并编辑 /etc/apt/preferences.d/debian-chromium： 检查策略： 安装 Chromium： 打开 chrome://flags，查看 Chrome/Chromium 中值得注意的试验性选项： #tab-groups：标签分组。 #enable-parallel-downloading：多线程下载。 #tab-hover-cards：标签预览卡片（禁用）。 #global-media-controls：全局媒体控制。 以上。又水了一篇。🐟 📖 [Ref] How to remove snap completely without losing the Chromium browser? - Ask Ubuntu "},{"title":"在即刻 app 刷 Jellow","date":"2019-12-06T16:00:00.000Z","url":"/post/redirect-jike-to-jellow/","tags":["darkmodeisbad","jike","jellow","redirect","thor","magisk","taichi","xposed"],"content":" 暗色模式坏耶！ Dark mode is bad! 瓦恁： 有一辆火车突然停了，我们就地造了一辆摩托车载人。所以速度有限，资源有限，还有各种限制。 摩托车名叫「Jellow」，上车需邀请函。「限制」可能指缺失的圈子动态流，严格的审查系统，或者强制开启的暗色模式。 无论如何，感谢即友曾经给予我的温暖。感谢。 iOSThor HTTP Sniffer/Capture 是 iOS 平台上优秀的嗅探抓包软件。我们使用 Thor 的断点调试在与即刻 API 的 TCP 连接之前替换 host，用 api.jellow.club 代替 app.jike.ruguoapp.com。 这个方法目前可以实现在即刻 app 成功登录并查看关注者动态、广场动态、圈子内动态，无法查看通知。感谢 Moranda 和三丰生同学的指教。 操作步骤： 安装即刻 app。从 App Store 的已购项目列表中找到「即刻」，下载安装。如果和 gadflysu 一样手机里已安装的即刻 app 并非最新版，可以进入设置，选择【General】→【iPhone Storage】，找到「即刻」，点击【Offload App】按钮，即在保留文档数据的前提下卸载应用。卸载之后选择【Reinstall App】重装即可更新到最新版的即刻 app。只有更新到 v6 才可以查看圈子内动态。 从 App Store 或 TestFlight 安装 Thor。 安装并信任 Thor SSL 证书。进入 Thor，根据 Filters 介面上的建议或在 More 介面选择【HTTPS Decrytion】，根据提示进行操作。 创建替换 host 的过滤器。在 Filters 介面点击上方的默认过滤器【Global (default)】，然后点击右上角【+】按钮以创建过滤器【Create Filter】，名字任意，选择 Attach breakpoints，从右上角【Edit】选择【Add New】，名字任意，选择【Before TCP Connected】，从右上角【Edit】选择【Add New】，再从右上角【Edit】选择【Add Expression if true】，在 Expression（表达式）下输入： 设置抓包域名。在过滤器编辑介面选择 Match Domains（包括域名），点击右上角【+】按钮以添加域名，输入： 返回以确认并保存。这一步是筛选抓包记录，可以省略。 启动过滤器。在 Filters 介面选择所创建的过滤器，点击下方的闪电按钮以启动即可。 Android在知道「重定向」方法可能可以实现在即刻 app 刷 Jellow 之后，gadflysu 从 Google 搜索到了一个将即刻 API 重定向到 Jellow API 的项目——JikeRedirect-Xposed。这是一个 Xposed 模块，但我使用 Android 10 和 Magisk 20.1，只要配合 TaiChi·Magisk 即可实现。 这个方法在实机测试中可以成功在即刻 app 中成功登录并查看关注者动态、广场动态、圈子内动态以及通知。感谢 Nzix 的项目。 目前有概率被随机登出账号，原因不明。 操作步骤： 安装即刻 app。从 APKPure 下载并安装即刻 app。 安装 Magisk 和 Magisk Manager。根据官方帖子进行操作。 🔗 [Links] GitHub Releases 启用 TaiChi·Magisk。进入 Magisk Manager，从侧边菜单选择【Download】，向下滚动或通过搜索找到【Taichi】，下载、安装并启用该模块。 下载并安装 TaiChi。 下载并安装 Jike Redirect。 启用 Jike Redirect。进入 TaiChi，点击右下角的太极按钮，选择【Manage Modules】，勾选 Jike Redirect。 对即刻 app 开启 Xposed 功能。返回到 TaiChi 主介面，点击右下角的太极按钮，选择【Add Apps】，向下滚动或通过搜索找到「即刻」，勾选添加。 至此就可以愉快地在白色的即刻 app 刷 Jellow 啦。 又水了一篇。🐟"},{"title":"Windows 磁盘清理指北","date":"2019-11-29T16:00:00.000Z","url":"/post/windows-disk-cleanup/","tags":["windows","guide","file management","disk cleanup"],"content":"Windows 分区 (C:) 的使用率总是不知不觉就出奇地高，这里需要一些技巧来删除无用文件。其实我是准备从 SSD 腾出一部分空间来安装新的 Linux 系统（比如可怕的 Arch Linux 什么的），但一键削除实在感觉危险，还是人工处理一下。 ⚠️ [Attention] 请务必在「明白自己在做什么」的前提下进行操作，并为自己的行为负责。 系统的磁盘清理和碎片整理磁盘清理工具是系统中用于清理磁盘的工具。（这是一句废话。）对磁盘分区右键选择【属性】，接着选择【磁盘清理】，然后选择要删除的文件并确定，或者进一步选择【清理系统文件】，按照提示进行操作。 ℹ️ [Note] 建议删除：临时文件、以前的 Windows 安装 (Windows.old)。 碎片整理程序可以重新组织磁盘上的碎片数据，从而提高计算机整体运行速度和效率。（这可不是废话。）进入【控制面板】，选择【系统和安全】，接着在【管理工具】部分选择【对硬盘进行碎片整理】，然后选择对应的磁盘分区并点击【优化】按钮即可，你也可以在下方配置定期整理的计划，按照提示进行操作。另外还有一些第三方的碎片整理工具，如 Auslogics Disk Defrag、Defraggler（与 CCleaner 同属 Piriform Ltd）或 IObit Smart Defrag 等等。 pagefile.sys 和 hiberfil.sys其实这两个文件，我是用 SpaceSniffer 检视磁盘占用情况的时候发现的，它们都是很大的单文件，能有几 GB 到十几 GB。前者是虚拟内存文件，系统设定了虚拟内存功能之后会使用一定的磁盘空间当作内存使用，类似于 Linux 的 swap file；后者保存了混合休眠 (hibernate) 前的系统内存状态，系统设定了混合休眠功能之后会出现该文件。删除办法不是粗暴的 Shift + Delete，建议关闭对应功能后重启计算机。 gadflysu 觉得自己的 16 GB 内存差不多也够用，决定直接关闭以前启用的「虚拟内存」功能，你也可以自定义允许占用的磁盘空间大小。打开此电脑 (This PC)，对空白处右键选择【属性】，选择【高级系统设置】，在【高级】选项卡下的【性能】部分，点击【设置…】按钮，接着在【高级】选项卡下的【虚拟内存】部分，点击【更改】按钮，取消勾选【自动管理所有驱动器的分页文件大小】，在下方选择【无分页文件】、【自定义大小】或其他，按照提示进行操作。 gadflysu 的 Windows 不是主力工作平台，对混合休眠模式没有需求，决定直接关闭该功能。以管理员身份在命令提示符中执行： 若仍需该功能，可以执行 POWERCFG /HIBERNATE /SIZE &lt;PERCENT_SIZE&gt; 指定 hiberfile 相对内存大小的比例，&lt;PERCENT_SIZE&gt; 值取范围 40 - 100。 安装程序到其他位置程序文件一般占用了相当的磁盘空间，将程序安装到其他分区可以一定程度地控制 C 盘占用，同时对于经常重装系统的情况也可以避免重复的程序安装过程。虽然，这对很多人来说可能是不建议的操作 (not recommended operation)，但是 gadflysu 不介意。 对 Google Chrome 这样顽固地安装到 C 盘且无法自定义安装位置的软件，你可能需要 Junction 这样的工具，参见文档 Junction - Windows Sysinternals | Microsoft Docs。 修改临时文件夹或用户文件夹位置对 C 盘的控制也可以是选择将部分文件存储到其他分区。 对于临时文件的自定义，首先创建新的临时文件夹，然后打开此电脑 (This PC)，对空白处右键选择【属性】，选择【高级系统设置】，在【高级】选项卡下点击【环境变量…】按钮，接着分别设定用户变量或系统变量中的 TEMP 和 TMP 变量，按照提示进行操作。 对于用户文件夹（包括 3D Objects、Desktop、Documents、Downloads、Music、Pictures 和 Videos 等）的自定义，打开此电脑 (This PC)，对对应文件夹右键选择【属性】，在【位置】选项卡下点击【移动…】按钮，按照提示进行操作。 删除临时文件系统中有很多地方存放着临时文件（比如缓存）。除了前文提到的 TEMP 变量所指示的位置，还有很多： 如果你安装了 Adobe 公司的软件，那么可能有：C:\\adobeTemp\\ 如果你安装了 Apple iTunes，那么可能有：%LocalAppData%\\Apple Computer\\iTunes\\Cache.db、C:\\ProgramData\\Apple Computer\\Installer Cache、C:\\ProgramData\\Apple\\Installer Cache 系统软件更新下载：C:\\Windows\\SoftwareDistribution\\Download Windows Defender 的更新备份缓存：C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\Backup Windows Explporer 的缓存：C:\\Users\\Gadfly\\AppData\\Local\\Microsoft\\Windows\\Explorer 下的 *cache* 内存转储文件：C:\\Windows\\Minidump 最近打开文件：C:\\Users\\Gadfly\\AppData\\Roaming\\Microsoft\\Windows\\Recent 上面是些胡乱举的例子，反正临时文件也不难找。手动删除文件的风险较高，请务必在「明白自己在做什么」的前提下进行操作。 大概以上几种方式。 又水了一篇。🐟 📖 [Ref] Windows 10 下 C 盘空间清理 - 逍遥峡谷 Win10 C 盘怎么瘦身？ - 知乎 硬盘碎片整理步骤教程 - Crucial Windows C 盘清理 - 掘金 "},{"title":"使用 nginx 获取真实访客 IP","date":"2019-11-18T16:00:00.000Z","url":"/web/restoring-original-visitor-ips-using-nginx/","tags":["nginx","reverse proxy","cdn","cloudflare"],"categories":["web"],"content":"当网站使用诸如 Cloudflare 的反代时，服务器默认只会得到来自反代服务地址的访客请求。此时需要做点什么来获取真实访客 IP。 ℹ️ [Note] 我使用 nginx 和 Cloudflare。本文适用于 Ubuntu 18.04 和 nginx (1.14.0)。 Cloudflare 将真实访客 IP 包含在 CF-Connecting-IP 和 X-Forwarded-For 两个 HTTP 请求头中。 CF-Connecting-IP 提供真实 IP。 CF-Connecting-IP 提供代理地址和真实 IP：如果 Cloudflare 接收到的请求不含 X-Forwarded-For 头，X-Forwarded-For 会和 CF-Connecting-IP 有相同的值，否则 Cloudflare 会将代理地址追加到该请求头。 Cloudflare 建议使用 CF-Connecting-IP。 对于 nginx，需要使用 ngx_http_realip_module 模块，该模块用于根据指定的 header 域修改客户端地址和端口（可选）。Ubuntu 上使用 apt 安装的 nginx 已包含该模块。 语法： 上下文：http、server 或 location。 具体配置： 其中 set_real_ip_from 定义告知正确替换地址（即真实访客 IP）的可信任地址，这里是 Cloudflare 的 IP（可能更新）；real_ip_header 定义用于获取客户端地址的 hearder 域。 我将上述配置添加到 /etc/nginx/nginx.conf 的 http 块中，保存后按照惯例执行 sudo nginx -t &amp;&amp; sudo nginx -s reload 即可。 📖 [Ref] Restoring original visitor IPs: Logging visitor IP addresses with mod_cloudflare – Cloudflare Support How does Cloudflare handle HTTP Request headers? – Cloudflare Support "},{"title":"Windows 启动引导选项","date":"2019-09-11T16:00:00.000Z","url":"/post/windows-boot-options/","tags":["windows","boot"],"content":"本文根据微软文档 Tools for Changing Boot Options for Driver Testing and Debugging 写成，由于该主题部分内容可能是由机器翻译，gadflysu 在其基础上主要对「Windows 启动选项」部分内容进行完善翻译，且有改动或删减。能力受限，若有不足还请见谅。 概述Windows 启动引导程序 (boot loader) 的体系结构包括： 与固件无关的启动配置和存储系统 Boot Configuration Data (BCD) 启动选项编辑工具 BCDEdit (BCDEdit.exe)。 BCDEdit 适用于 Windows NT 6（Windows Vista、Windows Server 2008 及以后的 NT 操作系统）。 ℹ️ [Note] 使用 BCDEdit 需要管理权限，且有可能导致计算机无法工作，系统配置实用工具 (Msconfig.exe) 是更改启动设置的另一种方法。 启动引导体系结构以前的 Windows NT 启动加载程序 ntldr 现由三个组件替代： Windows Boot Manager (Bootmgr.exe) Windows operating system loader (Winload.exe) Windows resume loader (Winresume.exe) 其中 Windows Boot Manager 是通用的，boot loader 则针对特定系统进行优化。当有多个启动项（包括 Windows）时，根目录中的 Windows Boot Manager 将启动并与用户交互，即显示启动菜单，加载用户所选择的 boot loader，并将引导参数传递给 boot loader。boot loader 位于每个 Windows 分区的根目录中。被选中后，boot loader 将接管启动进程，并根据指定的启动参数加载操作系统。 引导配置数据 (BCD)Windows 启动选项存储在基于 BIOS 和 EFI 的计算机上的引导配置数据 (BCD) 存储区中。 BCD 提供与固件无关的通用启动选项接口，它比以前的启动选项存储配置更安全，因为它允许安全锁定 BCD 存储，并允许管理员分配管理启动选项的权限。BCD 存储使用熟悉的对象和元素体系结构，通过 GUID 和如 Default 的名称来精确标识与启动相关的应用程序。 BCD 包含自己的一组启动选项。详见 BCD 启动选项参考。 启动选项标识符很多 bcdedit 命令需要标识符 (identifiers)。标识符唯一地标识启动设置存储区中的一个条目。 显示标识符： 标识符使用全局唯一的英语名称或 GUID。 特殊标识符一些配置条目拥有容易理解的特殊 id，bcdedit 将直接显示这些 id，除非使用 /v 参数指定显示 GUID。 常见特殊标识符： 标识符 描述 {default} 指 boot manager 默认启动项 {current} 指当前正在运行的操作系统的启动项 {bootmgr} 指 Windows boot manager 关于设置选项的标识符： 标识符 描述 {globalsettings} 包含全局设置，所有启动项都应继承 {bootloadersettings} 包含 boot loader 全局设置，所有 boot loader 项都应继承 {dbgsettings} 包含全局调试器设置，可被任何启动项继承 {hypervisorsettings} 包含虚拟机管理程序 (hypervisor) 设置，可被任何 OS loader 项继承 {emssettings} 包含全局紧急管理服务 (EMS) 设置，可被任何启动项继承 {resumeloadersettings} 包含 resume loader 的全局设置，所有 Windows 从休眠状态恢复的条目都应继承 {badmemory} 包含全局 RAM 缺陷列表，可被任何启动项继承 {memdiag} 指定内存诊断应用程序条目 {ramdiskoptions} 包含 boot manager 要求 RAM 磁盘设备的附加选项 早期版本的 Windows 使用这些标识符： 标识符 描述 {ntldr} 指 OS loader (Ntldr)，可用于启动 Windows Vista 以前版本的 Windows {fwbootmgr} 指固件 (firmware) 的 boot manager，特别用于那些实现 EFI 规范的系统 GUIDGUID 具有以下格式： 其中每个 x 表示十六进制数字，短划线 - 和大括号的位置是固定要求。由于使用 GUID 容易出错，所以建议使用英语的标识符名称配置 Windows 的启动信息，例如 &#123;current&#125; 等。例如： 使用 bcdedit /enum /v 来显示与标识符相关联的 GUID。 启动选项继承某些启动设置可被继承，这使一组设置可用于不同的引导方案。 使用 bcdedit /enum 命令显示任何标识符所指的条目信息，条目内 inherit 显示继承信息。如下例中 &#123;current&#125; 条目继承 &#123;bootloadersettings&#125;。 使用 bcdedit /enum 命令和 inherit 选项显示有关继承的信息。 使用 bcdedit /enum all 命令以查看所有设置。 BCDEdit 选项参考（略）启动入口参数，或引导参数，是可选的系统特定的设置，表示配置选项。你可以为一个操作系统的启动项添加启动参数。 ℹ️ [Note] 设置 BCDEdit 选项之前，可能需要禁用或暂停 BitLocker 和安全启动。 详见 BCDEdit Options Reference。 编辑启动选项本部分讲述使用 BCDEdit 自定义启动选项的基本元素的分步过程。 BCDEdit 随操作系统自带，在命令提示符窗口键入 bcdedit /? 或 bcdedit /? TOPICS 查看帮助。详见 BCD 启动选项参考。 ℹ️ [Note] 设置 BCDEdit 选项之前，可能需要禁用或暂停 BitLocker 和安全启动。 添加新的启动项启动项 (boot entry) 是指一组定义操作系统或可启动程序的引导配置的选项。你可以为一个操作系统设定多个具有不同启动参数的启动项。Windows Installer 在安装系统时创建了一个标准的启动项，建议不要改动之；而是添加一个单独的自定义启动项。 添加新的启动项添加新启动项的最简单办法是，复制现有的启动项，然后根据需要修改该副本。 ℹ️ [Note] 设置 BCDEdit 选项之前，可能需要禁用或暂停 BitLocker 和安全启动。 以管理员身份打开命令提示符窗口，使用 bcdedit 命令，由 /copy 选项指定源启动项、由 /d 选项指定目标启动项（即新启动项的名字）。例如复制一个当前操作系统的启动项： 如果顺利，该命令会告诉你新启动项的标识符 (GUID)，新启动项会被自动添加到启动菜单的最后一项。 使用 bcdedit 命令和 / create 选项可以创建一个启动项，但更加困难，因为你需要提供有关启动项类型的其他信息，指定 /application、/inherit 和 /device 等选项。例如创建名为 “My Windows Vista” 的新操作系统启动项： 如果顺利，该命令会告诉你新启动项的标识符 (GUID)，但是新启动项不会被自动添加到启动菜单。你必须使用 /displayorder 选项将启动项添加到启动菜单，位置可以任定。 在命令提示符窗口键入 bcdedit /? /create 查看帮助。 调整启动菜单使用选项 /displayorder 调整启动菜单中的启动项顺序，语法如下： ID 是启动项的 GUID 或特殊标识符（如 &#123;current&#125;），注意用空格分隔每个标识符，确保包含花括号 &#123; &#125;。例如将 DebugEntry 启动项添加到启动菜单 &#123;current&#125; 项之后（注意在 Windows PowerShell 中使用 &#39;&#123;guid&#125;&#39;): 此外使用选项 /addlast 和 /addfirst 调整启动项顺序。例如添加 DebugEntry 启动项到启动菜单的最后一项： 移除和删除启动项使用选项 /remove 将启动项从菜单移除。例如： 该命令仅改动启动菜单，被移除的启动项仍在 BCD 存储中。 使用 /delete 选项将启动项从启动菜单和 BCD 存储中完全删除。例如： 使用 bcdedit 命令且不带任何参数，BCDEdit 将显示 boot manager 条目并以启动菜单的顺序显示其中的启动项。 Windows Boot Manager 条目还包括启动菜单显示顺序 (displayorder)。 更改启动项的友好名称Windows Boot Manager 中启动项所显示的名称由该项的 description 决定。为启动项设定一个友好的名称有助于使之与其他项区分开，一个准确描述条目的名称可以节省大量的时间和精力。 无意义名称的示范： 准确名称的示范： ℹ️ [Note] 当基于 x86 或 x64 系统上的启动项配置了调试 (/debug /debugport) 或紧急管理服务 (EMS) (/redirect) 时，boot loader 将在启动项名称后追加一个用方括号括起来的短语（[debugger enabled] 或 [ems enabled]) 。但当启动项的友好名称和前述的方括号短语合计超过 70 个字符时，启动菜单忽略方括号短语，所以请视情况缩短启动项的名称。 若要更改 Boot.ini 文件中的启动项的友好名称，可以使用 Bootcfg 或编辑 Boot.ini 文件。对于将启动选项存储在 EFI NVRAM 中的系统，使用 Bootcfg。 若要更改 Windows 的启动项的友好名称，请使用 BCDEdit。 使用 BCDEdit使用 bcdedit 命令和 /set 选项修改启动项的友好名称。语法如下： 其中， 是启动项的标识符。 ℹ️ [Note] 如果使用 Windows PowerShell，必须在标识符两边加上引号，如 &quot;&#123;current&#125;&quot;。 在复制现有的启动项时，可使用 /d 选项直接修改名称： 使用 Bootcfg若使用 Bootcfg，启动项的友好名称只能在复制该条目时更改。使用 bootcfg 命令和 /copy 选项复制条目： 其中，使用 /ID 指定要复制的项的行号，/d 指定的新创建的项的友好名称。详见使用引导参数。 编辑 Boot.ini 文件在 Boot.ini 文件中，启动项的友好名称用引号标出。如： 直接编辑即可。 更改启动参数若要启用并配置与启动相关的操作系统功能（如调试），必须将启动参数添加到操作系统的启动项中。 BCDEdit 可以为启动项添加配置参数，如使用 /ems、/debug 或 /dbgsettings 等选项修改全局设置，或使用 BCDEdit /set 设置单独的参数，如下例将指定的启动项启用 PAE： 使用 /debug 选项启用或禁用内核调试程序： 若未指定 ID，该命令将为当前操作系统设置。以下命令打开为启动项目，名为 DebugEntry 内核调试程序： 更改默认启动项默认启动项是启动菜单超时后自动选择的项。 使用 BCDEdit 命令和 /default 选项指定默认启动项： 若要将默认启动项更改为早期 Windows 操作系统的 boot loader，使用 &#123;ntldr&#125; 作为 ID，这是 Ntldr 的保留名。 更改启动菜单超时引导菜单在等待一定时长后自动加载默认启动项，该时长以秒为单位。 使用 BCDEdit 命令和 /timeout 选项更改默认引导菜单超时值： 使用启动参数（略）驱动程序开发人员和测试人员通常需要添加、删除和更改启动项的参数以在不同状况下测试驱动程序。详见官方文档。 以前版本的 Windows 的启动选项（略）Windows XP 和 Windows Server 2003 中的启动选项，详见官方文档。 📖 [Ref] Microsoft Docs: Tools for Changing Boot Options for Driver Testing and Debugging ℹ️ [More] Windows NT 6 startup process - Wikipedia"},{"title":"中国银行「长城跨境通国际借记卡」体验","date":"2019-08-19T16:00:00.000Z","url":"/life/boc-mastercard-visa-debit-card/","tags":["debit card","mastercard","visa","bank of china","finance"],"categories":["life"],"content":"中国银行「长城跨境通国际借记卡」是 中国银行与国际上最大的两家银行卡组织 (Mastercard &amp; Visa) 合作，在国内推出的首张搭载 EMV 芯片标准的国际多币种借记卡，是具有接触 / 非接触功能的磁条芯片复合卡。 最重要的是，此卡是一张单标外币借记卡，支持绑定到 PayPal (US)、Google Play (US)、Vultr 等不接受银联卡的境外商户，非常适合于不方便申请国际信用卡但有境外消费需求的学生。 介绍🔗 [Links] 产品介绍 | 办卡指南 此卡有 Mastercard 和 Visa 两种品牌，有三种卡等级——对于 Mastercard（万事达卡），有金卡 Gold、白金卡 Platinum、世界卡 World；对于 Visa，有金卡 Gold、白金卡 Platinum、Signature 卡 Signature。因此享受 Mastercard 和 Visa 组织提供的各项权益和优惠活动。 🔗 [Links] 万事达卡尊享权益 | Visa 卡尊享权益 | 万事达卡权益平台 | Visa 卡权益平台 （已停更） Mastercard 的金卡和白金卡的卡面是韩国插画师 Ji Hyuk Kim 的世界名著系列故事绘画，分别为英国童话《佛兰德的狗》和加拿大小说《绿山墙的安妮》，世界卡的卡面则是法国画家克洛德·莫奈 (Oscar-Claude Monet) 的油画作品《印象·日出》，另有一未发行的竖版卡面为《打阳伞的女人（面左）》；Visa 的金卡和白金卡使用长城环球旅行卡的卡面，Signature 卡则是冬奥主题。所以外貌协会的 gadflysu 当然选择好看的 Mastercard。 金卡年费 10 元，白金卡年费 20 元。2019 年度办卡减免首年年费。开卡即免费赠送短信通知服务。 此卡支持美元、欧元、日元、港币、英镑、加拿大元、澳大利亚元、瑞士法朗、新加坡元、澳门元、韩国元、丹麦克朗、挪威克朗、新西兰元、菲律宾比索、俄罗斯卢布、瑞典克朗、泰国铢、南非兰特共计 19 种外币进行原币支付，无需进行货币转换。如交易地币种不在上述外币范围内，或卡片内交易地币种账户无余额或余额不足时，自动使用美元账户资金完成支付。 ⚠️ 注意： 此卡没有人民币账户，必须手动购汇，不得向其转账人民币。 此卡在交易时先冻结交易金额，后结算扣款。（见《中国银行股份有限公司长城借记卡章程》第十一条） 申请申领此卡无需繁杂的财力证明，前往中国银行网点申请当日领卡，或者线上申请等待邮寄。 凡自愿遵守《中国银行股份有限公司长城借记卡章程》并符合个人结算账户开立条件的个人，均可凭人民银行规定的本人实名制有效身份证件申领。 为了尽快拿到卡，gadflysu 决定到线下的中国银行营业网点申请。 ⚠️ 注意：除了「长城跨境通国际借记卡」，我们还需要一张普通的银联借记卡（人民币账户）用于购汇。 线上根据 poplite 的介绍，线上申请有两个渠道，分别来自微信公众号的「个金微资讯」和「中国银行上海分行」。 ⚠️ 注意：线上申请要求持卡人年满 16 周岁；申请时间为每天 8:30 至 19:30；邮寄地址应精确到门牌号；每人仅能持有一张世界卡。 通过「个金微资讯」公众号菜单【产品服务】→【申请借记卡】或下面的链接进入申请页面。 🔗 [Link] 线上申请 此通道支持长城跨境通国际借记卡的两种卡品牌和三种卡等级，共六种卡。 ℹ️ [More] Visa 冬奥主题借记卡 Signature | 线上申请 通过「中国银行上海分行」线上申请： 卡种 办理 Mastercard 莫奈卡 World 🔗 线上申请 Mastercard 非人哉联名卡 Gold 🔗 线上申请 此通道支持 Mastercard 的莫奈油画卡面的世界卡和非人哉联名限量发行的金卡。 ℹ️ [More] 洛天依小柠檬联名的银联借记卡线上申请 线下幸运的是，gadflysu 的住处附近就有一家中国银行，骑自行车大约只要十分钟的距离。 首先确认附近的中国银行营业网点是否支持办理「长城跨境通国际借记卡」。 通过在线客服咨询所在城市是否支持办理此卡，若是，有哪些网点支持。我咨询的客服告诉我江苏省网点支持办理，当我追问详细的网点时，她建议我咨询省分行，并给了我一个电话。（算了。） 通过电话直接咨询附近网点是否支持办理此卡，电话号码可在中国银行官网的机构网点页面或地图应用中搜寻。接我电话的工作人员告诉我其网点支持办理，当我追问是否有 Mastercard 时，她表示不确定，并给了我一个电话 _(*2?)_。（不能算了。）我继续打过去询问，比较顺利。 然后前往中国银行的营业网点办理申请即可。记得带上有效身份证和手机。（废话。） 据 gadflysu 的一点经验，一定要提前清楚了解银行业务的办理流程，两种：在工作人员的协助下到自助机器办理；在前台领号排队，待叫号时到柜台办理。千万不要觉得既然到银行时有工作人员贴心地询问办理什么业务，就耐心地待受其「服务」，因为人多的时候，如果没有主动询问或领号排队，（即便已经得到招待也）有可能被傻乎乎地晾在一边。请自行主动 cue 流程。这点素质相信在生活的各种事情上都适用。 假如在中国银行已开户且有普通借记卡，建议直接领号到柜台办理；否则，前述的两种流程一般都需要走一遍，因为先开户和办理普通的银联借记卡，工作人员是会带你到自助机器办的（不会建议你占用柜台的），而后申请长城跨境通国际借记卡应去柜台。 ⚠️ 注意：开户时要开通「网上银行」和「手机银行」业务。 幸亏我机智，当等待前方占用机器的客户的时候，我意识到我被晾了（因为她也被晾了，等待协助她办理业务的工作人员良久，整个队伍都停滞了），那么我白白等待的时候为什么不先领号排队呢？况且彼时距离银行关门大约仅余半小时，于是我主动回到前台要求领号，在排队等待且无聊踱步一会儿之后才有工作人员来问否办卡、继而才给我一张《个人账户开户及综合服务申请表》——这张表在稍后到柜台申卡的时候需要提交，但其实已开户的（比如刚刚在机器上开卡的我）粗略填写即可。 在柜台办理时，我们需要告知工作人员准确的卡种，并要求开通「小额 / 凭签名支付」功能。后者是工作人员主动询问我是否开通的，若工作人员没有提及，建议主动要求。 工本费 5 元，部分网点收取。 最后，gadflysu 顺利拿到一张《佛兰德的狗》卡面的 Mastercard 跨境通卡，好耶！ 然而可恨的是 gadflysu 以为工作人员从抽屉里搜罗出来的预制卡应该也只是旧一点，没想到卡上的金属芯片表面已经产生无法恢复的锈蚀。心态爆炸。（算了。） 使用此卡的使用一般是先通过银联借记卡购汇，然后将外汇转账到长城跨境通国际借记卡的对应币种账户。 ⚠️ 注意：此卡没有人民币账户，必须手动购汇，不得向其转账人民币。 在正式使用之前还需要初始化绑卡到手机银行并开通各项支付相关功能。本文的手机银行以 iOS 平台上的「中国银行」v6.0.6 为例。 首先将长城跨境通国际借记卡绑定到手机银行。确保此卡与银联借记卡被关联到同一账号。 然后在手机银行中为长城跨境通国际借记卡开通在线支付、跨行代扣、跨行订购、小额 / 凭签名免密和境外磁条交易等功能。其中「小额 / 凭签名免密」若已在柜台开通，则可忽略。 进入手机银行首页，选择【更多】→【支付】→【支付管理】→【跨行支付】，或者在搜索栏输入「跨行支付」后进入对应设置界面，接着分别选择【在线支付】【跨行代扣】和【跨行订购】以确认开通。 进入手机银行首页，选择【账户管理】，或者在搜索栏输入「账户管理」后进入对应设置界面，根据卡号选择跨境通借记卡 →【限额设置】，接着分别选择【小额 / 凭签名免密（POS 消费）】和【磁条交易限额设置】以确认开通。 购汇目前中国仍然是外汇管制国家。针对个人，每年结 / 购汇额度均为等值 5 万美元。 「现钞」是指取出为钞票或以钞票存入的款项；「现汇」是指转出为汇款或以汇款存入的款项。「结汇」是指将外汇 / 钞结算为人民币，即外币 → 人民；「购汇」是指使用人民币购买外汇 / 钞，即人民币 → 外币。 以 08/23/2019 00:00:05 中国银行发布的外汇牌价为例，美元的现汇买入价为 707.07、现钞买入价为 701.32、现汇卖出价为 710.06、现钞卖出价为 710.06。「现汇买入价」是指银行向你买入现汇的价格，即你的现汇结算价格为 $ 100 → ¥ 707.07；「现钞买入价」是指银行向你买入现钞的价格，即你的现钞结算价格为 $ 100 → ¥ 701.32；「现汇卖出价」是指银行向你卖出现汇的价格，即你的现汇购买价格为 ¥ 710.06 → $ 100；「现钞卖出价」是指银行向你卖出现钞的价格，即你的现钞购买价格为 ¥ 710.06 → $ 100。在一般情况下，现钞卖出价 &gt; 现汇卖出价 &gt; 现汇买入价 &gt; 现钞买入价。 ℹ️ [Note] gadflysu 在这方面并不专业，上述为简单理解，仅供参考。 经 gadflysu 向银行工作人员确认，跨境通卡上的外汇和外钞账户均可用于一般的网上购物，所以购汇时选择价格较低的现汇，除非有 ATM 或银行提取现钞的需求。 通过银联借记卡购汇： 进入手机银行首页，选择【更多】→【出境和外币服务】→【结汇购汇】→【购汇】，或者在搜索栏输入「购汇」后进入购汇界面，第一次需要开通「投资理财服务」。 阅读 30 秒《个人购汇申请书》浪费 30 秒的人生并确认之后进入购汇申报表，「交易账户」选择银联借记卡，「币种」和「外币金额」按需选择，「钞汇」一般选择价格较低的现汇，「预计用汇时间」「购汇用途」及之后的其他项则如实填写，勾选「本人保证申报信息真实有效……」，接着选择【下一步】，按照提示进行即可完成购汇。 ⚠️ 注意：中国银行的手机银行结汇购汇服务有工作时间限制。 结售汇交易只在每日 8:00 - 22:00 受理。为确保您的交易正常受理，建议您尽量避免在临近 22:00 时发起交易。 转账向跨境通卡转账外币： 进入手机银行首页，选择【转账】，然后选择【账号转账】，或者直接在【常用收款人】→【我的账户】下选择跨境通卡，进入转账界面。 「付款账户」选择银联借记卡、「币种」选择现有的外汇币种、「转账金额」自行设定、「收款人」填写自己的姓名、「收款账号」填写跨境通卡账号，接着选择【下一步】，按照提示即可完成转账。 交易此卡可顺利绑定到 PayPal (US)、Google Play (US)、Vultr 等境外商户。 ⚠️ 注意：此卡在交易时先冻结交易金额，后结算扣款。 《中国银行股份有限公司长城借记卡章程》第十一条： 申请人通过 Visa、Mastercard 等国际银行卡组织网络进行的交易属双信息交易，即卡片发生交易时，先在持卡人的账户中冻结交易金额，当国际银行卡组织与中国银行进行结算时再从持卡人账户中完成扣款。 据 poplite 的介绍，冻结金额的比例与消费币种有关，美元为 100%，非美元为 102%，其中 2% 将在入账后返还，因此建议在账户中多存入交易金额的 2%；在首次绑卡或支付时，部分商户会冻结一笔小额资金来验证你的账户，因此建议在账户中预存入 1 - 2 美元。 ⚠️ 注意：当交易账单发生退款时，冻结状态的资金一般可以退还，而结算扣款完成的资金可能无法退款入账。 据 miao_o 的介绍，此卡目前不接受任何外来资金的入账（包括退款），只接受本人的中国银行账户进行外币资金入账。 交易的动账通知有多种渠道：移动客户端「手机银行」、微信公众号「中国银行微银行」、短信。 以上是 gadflysu 的中国银行「长城跨境通国际借记卡」体验。祝你顺利。 📖 [Ref] poplite’s blog | moenjoy.com"},{"title":"正则表达式","date":"2019-07-11T16:00:00.000Z","url":"/general/regular-expression/","tags":["string","pattern matching","grep","sed","awk"],"categories":["general"],"content":"正则表达式 (Regular Expression, regex, regexp) 使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。 A regular expression is a pattern that describes a set of strings. 常用的工具 grep 中的「re」就是指正则表达式，Ken Thompson 在 44 年前 (Nov. 1974) 将此符号系统引入 grep。正则表达式的 POSIX 规范，分为基本型正则表达式 (Basic Regular Expression, BRE) 和扩展型正则表达式 (Extended Regular Express, ERE)。顾名思义，后者会更强大。在 GNU 实现的 grep 中，基本语法和扩展语法的可用功能没有区别。Perl 兼容正则表达式 (Perl Compatible Regular Expressions, PCRE) 支持更多的功能，它是由 Philip Hazel 在上个世纪末 (1997) 开发的一个正则表达式引擎，实现与 Perl 5 一致的语法和语义，被用于许多现代的著名项目，如 Apache、PHP、KDE、Postfix、Nmap 以及 Apple Safari。 基本结构我们暂且不管形式语言、自动机之类的理论，先来看一个简单的例子：hello*。这个正则表达式是含有 6 个字符的字符串，它匹配 hello、helloo 以及 hellooo 等等无穷多个以「hello」开头、后接 0 个或多个「o」的字符串。 正则表达式的基本结构是匹配一个字符的模式 (pattern)。大部分普通的字符，包括所有的字母和数字，都匹配它们自身，如 h 匹配 h、e 匹配 e。 一些有特殊功能的字符，如上例中表示匹配前面的子表达式 (o) 任意次的 *，叫作元字符 (meta-character)。**若要匹配元字符自身，则需要一个前缀的反斜杠 (\\, backslash) 进行转义 (escape)**，如 \\* 匹配一个星号 (*, asterisk)。 元字符有：^ $ ( ) * + ? . [ \\ &#123; |。 句点 . 是元字符，匹配除回车符 (carriage return, CR) 和换行符 (newline / line feed, LF) 之外的任意的单字符。例如，w.ll 能匹配 will 和 well。 一个正则表达式可后接像 * 这样的表达式，表示**重复操作 (repetition)**。详见下表： 表达式 描述 * 匹配前面的子表达式 0 次或更多次。 ? 匹配前面的子表达式 0 次或 1 次。 + 匹配前面的子表达式 1 次或更多次。 &#123;n&#125; 匹配前面的子表达式恰好 n 次。 &#123;n,&#125; 匹配前面的子表达式至少 n 次。 &#123;n,m&#125; 匹配前面的子表达式至少 n 次、至多 m 次。 从上表可见重复操作不一定由单个字符完成，更复杂的操作可能需要成对出现的花括号 (&#123; &amp; &#125;, curly braces) 以及数字。* 等价于 &#123;0,&#125;，? 等价于 &#123;0,1&#125;，+ 等价于 &#123;1,&#125;。此外 GNU grep 中还支持 &#123;,m&#125;，表示匹配至多 m 次，这是 GNU 的扩展 (extension)。 两个正则表达式可以直接连接，表示**串接操作 (concatenation)**，其结果匹配任何由分别匹配原表达式的字符串串接而得的字符串。为了表达得严谨些，看起来有点绕，举个例子来看就会很简单：正则表达式 a 和 b 串接的结果 ab，匹配由字符串 a 和 b 串接而得的字符串 ab。显然，这种操作是基本而广泛的。 两个正则表达式可以用竖线符 | 连接起来，表示**选择操作 (alternation)**，其结果匹配两个表达式中的任意一个。举个例子：a|b 匹配 a 或 b。（没错，这和或运算 (or) 的中缀表示法一致。） 重复操作优先于串接操作，串接操作优先于选择操作。例如，hi* 能匹配 hii 而不能匹配 hihi，fuc|nk 能匹配 fuc 而不能匹配 funk。 整个表达式可以使用圆括号 (( &amp; ), parentheses) 括起来，形成一个新的子表达式 (subexpression)，其优先级比前述三种操作都更高。例如，(hi)* 能匹配 hihi，fu(c|n)k 能匹配 funk。 空的正则表达式匹配空字符串 ``。 方括号表达式与字符类除了前文介绍的花括号和圆括号，还有一种常见的括号——方括号 ([ &amp; ], (square) brackets)。 由方括号括起来的一系列字符叫作方括号表达式 (bracket expression)，匹配方括号内字符序列中的任意一个字符。例如，[fox] 匹配 f、o 或者 x，等价于 f|o|x。 若序列中第一个字符为脱字符 (^, caret)，则匹配排除序列中字符的任何字符。例如，[^cat] 则无法匹配 c、a 或 t 但能匹配 d、0 或 g 等等。 方括号内仍有特殊功能的元字符仅余用于转义的反斜杠 \\ 以及在第一位的脱字符 ^。例如，[(fu)*k] 能匹配 (、f、u、)、* 或者 k。 在方括号表达式中，由两个字符及其之间的连字符 (-, hyphen) 组成的字符串叫作字符范围表达式 (range expression)，匹配在字符集中处于这两个字符之间范围的任意一个字符。还是举例子比较简单，对于一般的字符编码，[a-z] 匹配任意一个小写字母，[0-9] 匹配一位阿拉伯数字。所以，[A-D] 等价于 [ABCD] 即 A|B|C|D。 此外，方括号表达式中预定义了一些命名字符类 (named character class)，表示一系列特定的字符。详见下表： 类名 描述 [:lower:] 小写字母字符，同 [a-z] [:upper:] 大写字母字符，同 [A-Z] [:alpha:] 字母字符，即 [:lower:] 和 [:upper:]，同 [A-Za-z] [:digit:] 数字字符，同 [0-9] [:xdigit:] 十六进制数字字符，同 [A-Fa-f0-9] [:alnum:] 字母和数字字符，即 [:alpha:] 和 [:digit:]，同 [0-9A-Za-z] [:blank:] 空白符，指空格 (space, SP) 和制表符 (horizontal tab, HT)，同 [ \\t] [:space:] 空格符，指制表符 (HT)、换行符 (LF)、垂直制表符 (vertical tab, VT)、换页符 (form feed, FF)、回车符 (CR) 和空格 (SP) [:punct:] 标点字符，有：! &quot; # $ % &amp; &#39; ( ) * + , - . / : ; &lt; = &gt; ? @ [ \\ ] ^ _ &#x60; &#123; &#x7C; &#125; ~ [:graph:] 有形字符，即 [:alnum:] 和 [:punct:] [:print:] 可打印字符，即 [:alnum:]、[:punct:] 和空格 (SP) [:cntrl:] 控制字符，在 ASCII 中指从十进制的 0 到 37，以及 177 (DEL) 注意上表首列中的中括号是类名的一部分，含有命名符号类的正则表达式应该形如 [[:name:]]。例如，正则表达式 [[:lower:]01] 匹配所有小写字母，以及两个数字 0、1。 这里提及一个有趣的问题：我们知道 [[:digit:]] 等价于 [0-9]，那么如何写一个等价的一般的方括号表达式以在 shell 中使用 GNU grep 匹配 [:punct:] 这样一个复杂的符号类？这个问题主要是将有特殊功能的字符表示为普通字符，涉及 shell 中的引号使用以及中括号内的字符顺序。答案是： 我们在 shell 中通常用单引号来引用正则表达式，因为单引号最大限度地避免扩展 (expansion)，保留特殊字符的字面值 (literal value)，如 $ 仅仅是美元符 (dollar sign) 而非变量标志。前文说方括号内的元字符并未提到方括号 ([ &amp; ])，也就是说 [[] 匹配左方括号，[]] 匹配右方括号。这是没错的，虽然看起来有点不合常理的机智，因为一般而言 ] 不是标志着这个子表达式的终结吗？——类似于「在第一位的 ^ 代表排除式内字符」的规定，特别地，方括号内在第一位的 ] 匹配自身，而非结束方括号表达式。所以若要匹配 ]，必须将它放在第一位；正如若要匹配 ^，不得将它放在第一位。除此二之外，更多规则详见下表： 模式 描述 [. 表示 collating symbol 的开始 .] 表示 collating symbol 的结束 [= 表示 equivalence class 的开始 =] 表示 equivalence class 的结束 [: 表示命名字符类的开始，后跟有效类名 :] 表示命名字符类的结束 - 表示字符范围，当在非首位且非末位时 匹配空串的特殊表达式反斜杠符 \\ 作为转义字符（港台称「跳脫字元」），后跟一些特定的字符，表示一些特殊的模式匹配。 模式 描述 \\b 匹配单词边缘的空字符串 \\B 匹配非单词边缘的空字符串 \\&lt; 匹配单词开头位置的空字符串 \\&gt; 匹配单词末尾位置的空字符串 \\w 匹配单词成分，等价于 [_[:alnum:]] \\W 匹配非单词成分，等价于 [^_[:alnum:]] \\s 匹配空白符，等价于 [[:space:]] \\S 匹配非空白符，等价于 [^[:space:]] 其中「单词边缘」？「空字符串」？不太好理解。 举个例子，字符串 self-censorship 的每对相邻字符 (eg. s e)之间以及第一个 s 的左边、末尾 p 的右边的位置上，可以看作存在一个（或任意个）「空字符串」``。 那么位于第一个 s 和 c 的左边、f 和 p 的右边，也就是「单词边缘」的位置上的那个空串，能够由 \\b 匹配。于是 \\bs. 能匹配该串中的 se 而不匹配 so 或 sh。所谓单词边缘就是指一个其左右两个字符一个属于单词成分 (\\w)、一个不属于单词成分的位置。于是不难理解 \\B、\\&lt; 和 \\&gt; 应匹配什么位置的空串。 匹配特定空串实际上就是匹配位置。 脱字符 ^ 匹配行首的空串，美元符 $ 匹配行末的空串。这两个字符被称为**锚 (anchor)**，因为它们分别被锚定到行首和行末。例如，一文本文件有如下字符： 则 ^H.p 匹配该行内的 Hip，H.p$ 匹配该行内的 Hop。 反向引用与子表达式反向引用 (back-reference) 的语法为 \\n，其中 n 是一位数字。\\n 引用了正则表达式中第 n 个由圆括号形成的子表达式 (parenthesized subexpression)。例如，(f)\\1 相当于 (f)(f)，匹配 ff。 当被引用的子表达式被用于选择操作 (|) 中，假如该子表达式所在的部分不参与匹配，则整个匹配失败。例如，a(.)|b\\1 无法匹配 ba。GNU grep 给出的错误是「Invalid back reference」。 当有多个正则表达式进行匹配（比如 grep 使用 -e &lt;PATTERN&gt; 或 -f &lt;FILE&gt; 参数）时，向后引用的编号 (n) 是对于每一个正则表达式而言的。 以上是「正则表达式」的基本内容。 📖 [Ref] GNU grep docs "},{"title":"在 Ubuntu 安装与配置 MariaDB","date":"2019-03-17T16:00:00.000Z","url":"/database/mariadb-on-ubuntu/","tags":["mariadb","mysql","linux","ubuntu","primer"],"categories":["database"],"content":"MariaDB 是流行的关系型数据库管理系统 (RDBMS)，其著名用户有 Wikipedia、WordPress.com 和 Google。在 2009 年 Oracle 收购 Sun Microsystems 之后，后者旗下的开源数据库系统 MySQL 自然归属于（臭名昭著的）Oracle。为规避潜在的闭源风险，MySQL 的创始人 Michael Widenius 及原开发团队创建了一个保证开源的新分支——MariaDB。 安装MariaDB 可以从 Ubuntu 的官方软件源安装： 从前文的背景简述可知，MariaDB 兼容 MySQL，毕竟……/usr/bin/mariadb 就是 /usr/bin/mysql 的软链接。 要检查软件版本，执行： 本文将在上示环境和软件版本下进行。 启动 MariaDB 服务： 安全配置安装完成后建议首先用软件自带的一个脚本执行初始的安全配置： 注意使用 sudo 以获取 root 权限来执行，这是因为 MariaDB 的默认用户 root 采用 unix_socket 插件进行鉴权（这一点会在后面提到），而执行安全配置需要登录。 root 默认密码为空，按下「Enter」键即可。接下来设置你的 root 用户密码（注意没有回显）： MariaDB 默认有一个允许任何人登录的匿名用户，方便测试或者初次安装配置（例如后文会讲的用户配置），在生产环境下建议删除之： root 用户一般应该仅允许从本地登录，禁止远程连接： MariaDB 默认有一个允许任何人访问的数据库 (test)，在生产环境下建议删除之： 最后重载权限表以应用上面所做的变更： 创建用户经过安装和简单的初始配置之后，我们来尝试连接到 MariaDB server 看看，直接执行： 此时会遇到错误： 看起来是访问权限的问题：以 root 用户从本地尝试访问被拒绝。 我们在前面的配置中已经删除了匿名用户，现在 MariaDB 只有一个 root 用户；而我当前系统登录用户并非 root——其实数据库系统的用户和操作系统的用户显然是两回事，两者有什么关系呢？ 参考 Stack Overflow 的一个问答，MySQL 在一些系统（比如 Ubuntu）默认使用 unix_socket 插件，依赖系统用户凭证进行鉴权。官方文档讲，这个插件发布于 MariaDB 5.2.0，从 MariaDB 10.4.3 开始默认启用。unix_socket 允许用户通过本地的 Unix socket 文件使用系统凭证登录到 MariaDB Server。此插件通过系统调用可以获取连接到 socket 的进程 uid，进而得到与其关联的用户名，然后会将连接用户作为具有相同用户名的 MariaDB 用户进行身份验证。 简单的理解大概是，MariaDB 现在是通过系统用户来登录的，那么就要求 MariaDB 有一个同名用户。我们来看看 MariaDB 现在的用户配置： 虽然也可以修改插件配置，但是这里我仍然建议创建一个同名的数据库用户： 其中 YOUR_SYSTEM_USER 是你的用户名。至此就可以开始顺利地玩耍了。"},{"title":"为 Ubuntu LTS 安装 HWE 以获取更新的内核与图形支持","date":"2019-03-05T16:00:00.000Z","url":"/linux/ubuntu-install-hwe-for-newer-kernel-and-x-support/","tags":["ubuntu","software","hwe"],"categories":["linux"],"content":"本文是一份提示。 TL;DR: 原计划于今年 2 月 7 日发布的 Ubuntu 18.04.2 LTS 因 Linux 4.18 内核的一个 bug 推延至 2 月 14 日。（放送旧闻？）Ubuntu 18.04.2 LTS 最终伴随着来自 18.10 的内核与图形更新以及其他安全补丁和 bug 修复得以正式发布。此外，Ubuntu 18.04 的生命周期从五年延长至十年，这是 Ubuntu 创始人 Mark Shuttleworth 在去年 11 月的 OpenStack Summit 上宣布的。 Ubuntu LTS enablement（也叫 HWE 或 Hardware Enablement）stacks 用于支持不断更新的硬件技术，能够为现存的 Ubuntu LTS 提供更新的内核与图形支持，适用于桌面版、服务器版甚至 Cloud 版和虚拟镜像。 HWE Stacks (i.e. HWE Kernel + X Stack) 随 LTS 的小版本更新（point release，比如最近的 18.04.2）发布，当通过媒介安装新版 Ubuntu LTS 时，HWE 会一并安装，对于正在运行的系统则需要手动安装。为了减轻维护团队的负担，HWE 采用滚动更新的模式。LTS 的第五个（即最后一个）小版本更新时，用户将被要求升级至最后一个 HWE stack 以保留安全更新和 bug 修复的支持。 安装 HWE 只需要执行： 下面是我的安装记录，显示了一些实际即将安装的和移除的包： 📖 [Ref] Softpedia news | It’s F.O.S.S news | Ubuntu wiki LTSEnablementStack, RollingLTSEnablementStack"},{"title":"Windows 启动错误 0xc0e90002 的解决办法","date":"2017-10-21T16:00:00.000Z","url":"/issue/windows-error-0xc0e90002/","tags":["windows","boot","error","blue screen"],"categories":["issue"],"content":"[Note] 2017 年的旧文，近期 (Jul. 2019) 寻回并整理。 在一次从 Windows 10 家庭版升级至 Windows 10 Insider Preview 的过程中，系统自动重启时无法从硬盘启动，之后我尝试从 Legacy 模式启动，亦尝试从装载 Windows 的 U 盘启动时，才出现蓝屏，并报告 error 0xc0e90002。 网上还有一些别的导致 error 0xc0e90002 的实例： 升级至 16193 版本后出问题，欲回退至 15063 失败 安装并使用 Insider Preview 一段时间后，欲回退至原来的 Windows 版本 从 1703 预览版回退失败后重装 1703 或 1607 可见此错误一般出现在安装新版本 Windows 10（如 Insider Preview 等等）失败（也可能成功）后欲回退或重装 Windows 失败时。这个错误是 EFI 变量中的「Revoke」信息导致的，下文记录个人解决该错误的操作步骤。 准备用料 一个正常运行的操作系统：也许你在设备上安装了多系统且有可启动的其他系统，也许你可以借朋友的正常计算机，也许你备有系统启动盘； 一个 U 盘； EFI shell：从 edk2 项目下载 EFI shell（64 位 或 32 位）。 制作 EFI shell 启动介质 将 U 盘格式化为 fat32 格式，并创建文件夹 /EFI/Boot/； 将 64 位 EFI shell 重命名为 bootx64.efi，将 32 位 EFI shell 重命名为 bootla32.efi，并将它们复制到 U 盘的 /EFI/Boot/ 目录下。 进入 EFI shell 咨询设备制造商，进入 BIOS，关闭「安全启动」模式； 在 BIOS 中调整设备启动顺序使 U 盘优先启动，或许你的计算机和我一样支持开机时进入「选择启动设备」界面； 进入 U 盘并选择对应位的 EFI shell。 删除 Revoke 信息 显示 Revoke 信息，执行 使用 dmpstore 命令删除列出的 Revoke 信息，类似于： 退出 EFI shell 如下图。 启动或重装操作系统 在 BIOS 打开「安全启动」选项； 按下电源键开机，进入原操作系统，可能需要等待系统修复；或者从 U 盘启动并重装新的操作系统。 以上是解决 error 0xc0e90002 的操作步骤。 📖 [Ref] Microsoft Community"},{"date":"2020-09-06T18:20:59.473Z","url":"/pwa_manifest.json","content":"{\"name\":\"F6FW\",\"theme_color\":\"#3949ab\",\"background_color\":\"#d81b60\",\"display\":\"standalone\",\"Scope\":\"/\",\"start_url\":\"/\",\"icons\":[{\"src\":\"img/icons/icon-72x72.png\",\"sizes\":\"72x72\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-96x96.png\",\"sizes\":\"96x96\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-128x128.png\",\"sizes\":\"128x128\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-144x144.png\",\"sizes\":\"144x144\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-152x152.png\",\"sizes\":\"152x152\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-192x192.png\",\"sizes\":\"192x192\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-384x384.png\",\"sizes\":\"384x384\",\"type\":\"image/png\"},{\"src\":\"img/icons/icon-512x512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}],\"splash_pages\":null}"},{"title":"About","date":"2018-12-31T16:00:00.000Z","url":"/about/index.html","content":" var ap = new APlayer({ element: document.getElementById(\"aplayer-NRUCMiEf\"), narrow: false, autoplay: false, showlrc: false, music: { title: \"盼暖春来\", author: \"刺猬\", url: \"刺猬 - 盼暖春来.m4a\", pic: \"\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 🐟 gadflysu: beginner, developer, idealist, censored character, survivor of the 21st century 🌏 Language: 中文 / English 🥤 Drinks: caffè americano, pure milk, milk tea, soda water (Watson’s), cola (Coca-Cola) 📚 Major: software engineering 📧 Email: hi&#x40;gadflysu.com 🕸 Social Network: Telegram, Mastodon, Twitter, Instagram, #SayNoToWeChat, #SayNoToQQ 👨‍💻 Programming: Pascal, C, Java, C++ ⏱ Algorithm Competition: NOIP (2015), ACM-ICPC Regional (2018) No Awards :) 💻 Laptop: OMEN by HP Laptop PC (2016) 📱 Smartphone: OnePlus 7T Pro (2020), Apple iPhone SE (2018), Google Nexus 5X (2016), Samsung Galaxy S II (2013) 🖥 Desktop OS: Ubuntu 20.04 with Unity, macOS 10.14, Windows 10 🐚 Shell: Bash, Zsh with Oh My Zsh 📝 Editor: Sublime Text 3 ⌨️ Indentation: 4 Spaces &nbsp;&nbsp;&nbsp;&nbsp; 🌼 Break Before Braces: attach"},{"title":"Changelog","date":"2020-09-06T18:22:28.732Z","url":"/changelog/index.html","content":"201911/22 Suka: 1.3.3 → 1.4.0 Vendors: suka 1.3.0 → 1.4.0, spectre 0.5.3 → 0.5.5, vanilla-lazyload 8.9.0 → 12.4.0 09/03增加 changelog 页面。 09/02切换到 Suka 主题的 canary 分支。 07/14 使用 Suka 主题。 使用 Google Analytics 和 CNZZ 统计分析。 201812/31 博客 blog / gadflysu 上线。 托管在 GitHub Pages。 使用 Material 主题。 "},{"title":"捐赠","date":"2019-04-17T16:00:00.000Z","url":"/donate/index.html","content":"如果你想支持我的作品，请考虑给我买咖啡。 Please consider buying me a coffee if you like to support my work. PayPal Liberapay Patreon Buy Me A Coffee "},{"title":"Links","date":"2020-09-06T18:23:00.567Z","url":"/links/index.html"},{"title":"推荐计划","date":"2019-04-13T16:00:00.000Z","url":"/ref/index.html","content":"云计算BandwagonHostBandwagonHost 是著名的虚拟专用服务器 (VPS) 提供商，俗称「搬瓦工」。 点击【这里】购买 BandwagonHost 的 VPS，我可以获得 22% 的返利。 DigitalOceanDigitalOcean 是 2011 年成立于美国纽约州的云基础架构提供商，面向软件开发人员提供虚拟专用服务器 (VPS)，在世界各地拥有 12 个数据中心。 🎁 [Get $100] 点击【这里】成为 DigitalOcean 的新用户，你可以获得 $100 的消费额度（60 天）。 VultrVultr 是 2014 年成立于美国新泽西州的云托管服务提供商，通过其高级云平台简化基础架构的部署，在世界各地拥有 16 个数据中心。 🎁 [Get $100] 点击【这里】成为 Vultr 的新用户，你可以获得 $100 的消费额度（30 天）。 点击【这里】成为 Vultr 的新用户。 云存储DropboxDropbox 是著名的在线文件同步服务，可在多设备间快速同步文件，支持还原历史文件。 点击【这里】开始使用 Dropbox。 OneDriveOneDrive 是微软所推出的网络硬盘及云端服务。用户可以上传他们的文件到网络服务器上，并且通过网络浏览器来浏览那些文件，更可直接编辑和观看 Microsoft Office 文件。通过同步上传软件，可于电脑直接访问和同步文件。 点击【这里】开始使用 OneDrive，你可以获得额外的 0.5 GB 存储空间。 TeraCLOUDTeraCLOUD 是日本的一家在线存储服务，由于支持 WebDAV，可以挂载到本地。 注：因六周年活动，传输带宽升级至 100 Mbps。 点击【这里】注册并登录之后，你将拥有免费的无限期的 10 GB 存储空间；在 Mypage 填写我的介绍代码 5S6CR，你可以获得额外的无限期的 5 GB 存储空间。至此总共 15 GB。 MEGA点击【这里】开始使用 MEGA。 效率工具NotionNotion 是一个支持 Markdown、Wiki 及其他数据类型的笔记类在线协作平台。 点击【这里】开始使用 Notion，你可以获得 $10 的消费额度。 DroplrDroplr 是非常优秀的文件分享与协作工具，特别是在截取分享屏幕图像或视频的能力。 点击【这里】开始使用 Droplr。 学习教育Duolingo点击【这里】开始使用 Duolingo，我可以获得一周免费 Duolingo Plus 会员。"},{"title":"Search","date":"2020-09-06T18:23:21.910Z","url":"/search/index.html"},{"title":"Blog Tags","date":"2020-09-06T18:23:30.594Z","url":"/tags/index.html"}]